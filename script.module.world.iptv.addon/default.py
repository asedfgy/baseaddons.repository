# encoded by pyprotect
# http://gabrielsilva.tk/pyprotect

import base64, codecs
magic = 'IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KaW1wb3J0IHVybGxpYgppbXBvcnQgdXJsbGliMgppbXBvcnQgcmUKaW1wb3J0IG9zCmltcG9ydCB4Ym1jcGx1Z2luCmltcG9ydCB4Ym1jZ3VpCmltcG9ydCB4Ym1jYWRkb24KaW1wb3J0IHhibWN2ZnMKaW1wb3J0IHRyYWNlYmFjawppbXBvcnQgY29va2llbGliLGJhc2U2NApmcm9tIEJlYXV0aWZ1bFNvdXAgaW1wb3J0IEJlYXV0aWZ1bFN0b25lU291cCwgQmVhdXRpZnVsU291cCwgQmVhdXRpZnVsU09BUAp2aWV3bW9kZT1Ob25lCnRyeToKICAgIGZyb20geG1sLnNheC5zYXh1dGlscyBpbXBvcnQgZXNjYXBlCmV4Y2VwdDogdHJhY2ViYWNrLnByaW50X2V4YygpCnRyeToKICAgIGltcG9ydCBqc29uCmV4Y2VwdDoKICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24KaW1wb3J0IFNpbXBsZURvd25sb2FkZXIgYXMgZG93bmxvYWRlcgppbXBvcnQgdGltZQp0c2Rvd25sb2FkZXI9RmFsc2UKcmVzb2x2ZV91cmw9WycxODB1cGxvYWQuY29tJywgJ2FsbG15dmlkZW9zLm5ldCcsICdiZXN0cmVhbXMubmV0JywgJ2NsaWNrbnVwbG9hZC5jb20nLCAnY2xvdWR6aWxsYS50bycsICdtb3ZzaGFyZS5uZXQnLCAnbm92YW1vdi5jb20nLCAnbm93dmlkZW8uc3gnLCAndmlkZW93ZWVkLmVzJywgJ2RhY2xpcHMuaW4nLCAnZGF0ZW11bGUuY29tJywgJ2Zhc3R2aWRlby5pbicsICdmYXN0c3RyZWFtLmluJywgJ2ZpbGVob290LmNvbScsICdmaWxlbnVrZS5jb20nLCAnc2hhcmVzaXguY29tJywgICdwbHVzLmdvb2dsZS5jb20nLCAncGljYXNhd2ViLmdvb2dsZS5jb20nLCAnZ29yaWxsYXZpZC5jb20nLCAnZ29yaWxsYXZpZC5pbicsICdncmlmdGhvc3QuY29tJywgJ2h1Z2VmaWxlcy5uZXQnLCAnaXBpdGhvcy50bycsICdpc2hhcmVkLmV1JywgJ2tpbmdmaWxlcy5uZXQnLCAnbWFpbC5ydScsICdteS5tYWlsLnJ1JywgJ3ZpZGVvYXBpLm15Lm1haWwucnUnLCAnbWlnaHR5dXBsb2FkLmNvbScsICdtb29zaGFyZS5iaXonLCAnbW92ZGl2eC5jb20nLCAnbW92cG9kLm5ldCcsICdtb3Zwb2QuaW4nLCAnbW92cmVlbC5jb20nLCAnbXJmaWxlLm1lJywgJ25vc3ZpZGVvLmNvbScsICdvcGVubG9hZC5pbycsICdwbGF5ZWQudG8nLCAnYml0c2hhcmUuY29tJywgJ2ZpbGVmYWN0b3J5LmNvbScsICdrMnMuY2MnLCAnb2Jvb20uY29tJywgJ3JhcGlkZ2F0b3IubmV0JywgJ3ByaW1lc2hhcmUudHYnLCAnYml0c2hhcmUuY29tJywgJ2ZpbGVmYWN0b3J5LmNvbScsICdrMnMuY2MnLCAnb2Jvb20uY29tJywgJ3JhcGlkZ2F0b3IubmV0JywgJ3NoYXJlcmVwby5jb20nLCAnc3RhZ2V2dS5jb20nLCAnc3RyZWFtY2xvdWQuZXUnLCAnc3RyZWFtaW4udG8nLCAndGhlZmlsZS5tZScsICd0aGV2aWRlby5tZScsICd0dXNmaWxlcy5uZXQnLCAndXBsb2FkYy5jb20nLCAnemFsYWEuY29tJywgJ3VwbG9hZHJvY2tldC5uZXQnLCAndXB0b2JveC5jb20nLCAndi12aWRzLmNvbScsICd2ZWVoZC5jb20nLCAndmlkYnVsbC5jb20nLCAndmlkZW9tZWdhLnR2JywgJ3ZpZHBsYXkubmV0JywgJ3ZpZHNwb3QubmV0JywgJ3ZpZHRvLm1lJywgJ3ZpZHppLnR2JywgJ3ZpbWVvLmNvbScsICd2ay5jb20nLCAndm9kbG9ja2VyLmNvbScsICd4ZmlsZWxvYWQuY29tJywgJ3h2aWRzdGFnZS5jb20nLCAnemV0dGFob3N0LnR2J10KZ19pZ25vcmVTZXRSZXNvbHZlZD1bJ3BsdWdpbi52aWRlby5kcmFtYXNvbmxpbmUnLCdwbHVnaW4udmlkZW8uZjRtVGVzdGVyJywncGx1Z2luLnZpZGVvLnNoYWhpZG1iY25ldCcsJ3BsdWdpbi52aWRlby5TcG9ydHNEZXZpbCcsJ3BsdWdpbi5zdHJlYW0udmF1Z2hubGl2ZS50dicsJ3BsdWdpbi52aWRlby5aZW1UVi1zaGFuaSddCgpjbGFzcyBOb1JlZGlyZWN0aW9uKHVybGxpYjIuSFRUUEVycm9yUHJvY2Vzc29yKToKICAgZGVmIGh0dHBfcmVzcG9uc2Uoc2VsZiwgcmVxdWVzdCwgcmVzcG9uc2UpOgogICAgICAgcmV0dXJuIHJlc3BvbnNlCiAgIGh0dHBzX3Jlc3BvbnNlID0gaHR0cF9yZXNwb25zZQoKUkVNT1RFX0RCRz1GYWxzZTsKaWYgUkVNT1RFX0RCRzoKICAgICMgTWFrZSBweWRldiBkZWJ1Z2dlciB3b3JrcyBmb3IgYXV0byByZWxvYWQuCiAgICAjIE5vdGUgcHlkZXZkIG1vZHVsZSBuZWVkIHRvIGJlIGNvcGllZCBpbiBYQk1DXHN5c3RlbVxweXRob25cTGliXHB5c3JjCiAgICB0cnk6CiAgICAgICAgaW1wb3J0IHB5c3JjLnB5ZGV2ZCBhcyBweWRldmQKICAgICMgc3Rkb3V0VG9TZXJ2ZXIgYW5kIHN0ZGVyclRvU2VydmVyIHJlZGlyZWN0IHN0ZG91dCBhbmQgc3RkZXJyIHRvIGVjbGlwc2UgY29uc29sZQogICAgICAgIHB5ZGV2ZC5zZXR0cmFjZSgnbG9jYWxob3N0Jywgc3Rkb3V0VG9TZXJ2ZXI9VHJ1ZSwgc3RkZXJyVG9TZXJ2ZXI9VHJ1ZSkKICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICBzeXMuc3RkZXJyLndyaXRlKCJFcnJvcjogIiArCiAgICAgICAgICAgICJZb3UgbXVzdCBhZGQgb3JnLnB5dGhvbi5weWRldi5kZWJ1Zy5weXNyYyB0byB5b3VyIFBZVEhPTlBBVEguIikKICAgICAgICBzeXMuZXhpdCgxKQoKCmFkZG9uID0geGJtY2FkZG9uLkFkZG9uKCdzY3JpcHQubW9kdWxlLndvcmxkLmlwdHYuYWRkb24nKQphZGRvbl92ZXJzaW9uID0gYWRkb24uZ2V0QWRkb25JbmZvKCd2ZXJzaW9uJykKcHJvZmlsZSA9IHhibWMudHJhbnNsYXRlUGF0aChhZGRvbi5nZXRBZGRvbkluZm8oJ3Byb2ZpbGUnKS5kZWNvZGUoJ3V0Zi04JykpCmhvbWUgPSB4Ym1jLnRyYW5zbGF0ZVBhdGgoYWRkb24uZ2V0QWRkb25JbmZvKCdwYXRoJykuZGVjb2RlKCd1dGYtOCcpKQpmYXZvcml0ZXMgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ2Zhdm9yaXRlcycpCmhpc3RvcnkgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ2hpc3RvcnknKQpSRVYgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ2xpc3RfcmV2aXNpb24nKQppY29uID0gb3MucGF0aC5qb2luKGhvbWUsICdpY29uLnBuZycpCkZBTkFSVCA9IG9zLnBhdGguam9pbihob21lLCAnZmFuYXJ0LmpwZycpCnNvdXJjZV9maWxlID0gb3MucGF0aC5qb2luKGhvbWUsICdyZXNvbHZlcnMucHknKQpmdW5jdGlvbnNfZGlyID0gcHJvZmlsZQoKY29tbXVuaXR5ZmlsZXMgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ0xpdmV3ZWJUVicpCmRvd25sb2FkZXIgPSBkb3dubG9hZGVyLlNpbXBsZURvd25sb2FkZXIoKQpkZWJ1ZyA9IGFkZG9uLmdldFNldHRpbmcoJ2RlYnVnJykKaWYgb3MucGF0aC5leGlzdHMoZmF2b3JpdGVzKT09VHJ1ZToKICAgIEZBViA9IG9wZW4oZmF2b3JpdGVzKS5yZWFkKCkKZWxzZTogRkFWID0gW10KaWYgb3MucGF0aC5leGlzdHMoc291cmNlX2ZpbGUpPT1GYWxzZToKICAgIFNPVVJDRVMgPSBvcGVuKHJlc29sdmVycy5weSkucmVhZCgpCmVsc2U6IFNPVVJDRVMgPSBbXQoKCmRlZiBhZGRvbl9sb2coc3RyaW5nKToKICAgIGlmIGRlYnVnID09ICd0cnVlJzoKICAgICAgICB4Ym1jLmxvZygiW2FkZG9uLndvcmxkSVBUVi0lc106ICVzIiAlKGFkZG9uX3ZlcnNpb24sIHN0cmluZykpCgoKZGVmIG1ha2VSZXF1ZXN0KHVybCwgaGVhZGVycz1Ob25lKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlmIGhlYWRlcnMgaXMgTm9uZToKICAgICAgICAgICAgICAgIGhlYWRlcnMgPSB7J1VzZXItQWdlbnQnIDogJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81Mi4wLjI3NDMuMTE2IFNhZmFyaS81MzcuMzYnfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICd8JyBpbiB1cmw6CiAgICAgICAgICAgICAgICB1cmwsaGVhZGVyX2luX3BhZ2U9dXJsLnNwbGl0KCd8JykKICAgICAgICAgICAgICAgIGhlYWRlcl9pbl9wYWdlPWhlYWRlcl9pbl9wYWdlLnNwbGl0KCcmJykKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZm9yIGggaW4gaGVhZGVyX2luX3BhZ2U6CiAgICAgICAgICAgICAgICAgICAgaWYgbGVuKGguc3BsaXQoJz0nKSk9PTI6CiAgICAgICAgICAgICAgICAgICAgICAgIG4sdj1oLnNwbGl0KCc9JykKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICB2YWxzPWguc3BsaXQoJz0nKQogICAgICAgICAgICAgICAgICAgICAgICBuPXZhbHNbMF0KICAgICAgICAgICAgICAgICAgICAgICAgdj0nPScuam9pbih2YWxzWzE6XSkKICAgICAgICAgICAgICAgICAgICAgICAgI24sdj1oLnNwbGl0KCc9JykKICAgICAgICAgICAgICAgICAgICBwcmludCBuLHYKICAgICAgICAgICAgICAgICAgICBoZWFkZXJzW25dPXYKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgcmVxID0gdXJsbGliMi5SZXF1ZXN0KHVybCxOb25lLGhlYWRlcnMpCiAgICAgICAgICAgIHJlc3BvbnNlID0gdXJsbGliMi51cmxvcGVuKHJlcSkKICAgICAgICAgICAgZGF0YSA9IHJlc3BvbnNlLnJlYWQoKQogICAgICAgICAgICByZXNwb25zZS5jbG9zZSgpCiAgICAgICAgICAgIHJldHVybiBkYXRhCiAgICAgICAgZXhjZXB0IHVybGxpYjIuVVJMRXJyb3IsIGU6CiAgICAgICAgICAgIGFkZG9uX2xvZygnVVJMOiAnK3VybCkKICAgICAgICAgICAgaWYgaGFzYXR0cihlLCAnY29kZScpOgogICAgICAgICAgICAgICAgYWRkb25fbG9nKCdXZSBmYWlsZWQgd2l0aCBlcnJvciBjb2RlIC0gJXMuJyAlIGUuY29kZSkKICAgICAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIlhCTUMuTm90aWZpY2F0aW9uKHdvcmxkSVBUVixXZSBmYWlsZWQgd2l0aCBlcnJvciBjb2RlIC0gIitzdHIoZS5jb2RlKSsiLDEwMDAwLCIraWNvbisiKSIpCiAgICAgICAgICAgIGVsaWYgaGFzYXR0cihlLCAncmVhc29uJyk6CiAgICAgICAgICAgICAgICBhZGRvbl9sb2coJ1dlIGZhaWxlZCB0byByZWFjaCBhIHNlcnZlci4nKQogICAgICAgICAgICAgICAgYWRkb25fbG9nKCdSZWFzb246ICVzJyAlZS5yZWFzb24pCiAgICAgICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCJYQk1DLk5vdGlmaWNhdGlvbih3b3JsZElQVFYsV2UgZmFpbGVkIHRvIHJlYWNoIGEgc2VydmVyLiAtICIrc3RyKGUucmVhc29uKSsiLDEwMDAwLCIraWNvbisiKSIpCgpkZWYgZ2V0U291cmNlcygpOgogICAgICAgIHRyeToKICAgICAgICAgICAgaWYgb3MucGF0aC5leGlzdHMoZmF2b3JpdGVzKSA9PSBUcnVlOgogICAgICAgICAgICAgICAgYWRkRGlyKCdGYXZvcml0ZXMnLCd1cmwnLDQsb3MucGF0aC5qb2luKGhvbWUsICdyZXNvdXJjZXMnLCAnZmF2b3JpdGUucG5nJyksRkFOQVJULCcnLCcnLCcnLCcnKQogICAgICAgICAgICBpZiBhZGRvbi5nZXRTZXR0aW5nKCJicm93c2VfeG1sX2RhdGFiYXNlIikgPT0gInRydWUiOgogICAgICAgICAgICAgICAgYWRkRGlyKCdYTUwgRGF0YWJhc2UnLCdodHRwOi8veGJtY3BsdXMueGIuZnVucGljLmRlL3d3dy1kYXRhL2ZpbGVzeXN0ZW0vJywxNSxpY29uLEZBTkFSVCwnJywnJywnJywnJykKICAgICAgICAgICAgaWYgYWRkb24uZ2V0U2V0dGluZygiYnJvd3NlX2NvbW11bml0eSIpID09ICJ0cnVlIjoKICAgICAgICAgICAgICAgIGFkZERpcignQ29tbXVuaXR5IEZpbGVzJywnY29tbXVuaXR5X2ZpbGVzJywxNixpY29uLEZBTkFSVCwnJywnJywnJywnJykKICAgICAgICAgICAgaWYgYWRkb24uZ2V0U2V0dGluZygic2VhcmNob3RoZXJwbHVnaW5zIikgPT0gInRydWUiOgogICAgICAgICAgICAgICAgYWRkRGlyKCdTZWFyY2ggT3RoZXIgUGx1Z2lucycsJ1NlYXJjaCBQbHVnaW5zJywyNSxpY29uLEZBTkFSVCwnJywnJywnJywnJykKICAgICAgICAgICAgaWYgb3MucGF0aC5leGlzdHMoc291cmNlX2ZpbGUpPT1UcnVlOgogICAgICAgICAgICAgICAgc291cmNlcyA9IGpzb24ubG9hZHMob3Blbihzb3VyY2VfZmlsZSwiciIpLnJlYWQoKSkKICAgICAgICAgICAgICAgICNwcmludCAnc291cmNlcycsc291cmNlcwogICAgICAgICAgICAgICAgaWYgbGVuKHNvdXJjZXMpID4gMToKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBzb3VyY2VzOgogICAgICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIyBmb3IgcHJlIDEuMC44IHNvdXJjZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoaSwgbGlzdCk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyKGlbMF0uZW5jb2RlKCd1dGYtOCcpLGlbMV0uZW5jb2RlKCd1dGYtOCcpLDEsaWNvbixGQU5BUlQsJycsJycsJycsJycsJ3NvdXJjZScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRodW1iID0gaWNvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbmFydCA9IEZBTkFSVAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2MgPSAnJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGUgPSAnJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWRpdHMgPSAnJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlbnJlID0gJycKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBpLmhhc19rZXkoJ3RodW1ibmFpbCcpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHVtYiA9IGlbJ3RodW1ibmFpbCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgaS5oYXNfa2V5KCdmYW5hcnQnKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFuYXJ0ID0gaVsnZmFuYXJ0J10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBpLmhhc19rZXkoJ2Rlc2NyaXB0aW9uJyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2MgPSBpWydkZXNjcmlwdGlvbiddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgaS5oYXNfa2V5KCdkYXRlJyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGUgPSBpWydkYXRlJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBpLmhhc19rZXkoJ2dlbnJlJyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlbnJlID0gaVsnZ2VucmUnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGkuaGFzX2tleSgnY3JlZGl0cycpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVkaXRzID0gaVsnY3JlZGl0cyddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyKGlbJ3RpdGxlJ10uZW5jb2RlKCd1dGYtOCcpLGlbJ3VybCddLmVuY29kZSgndXRmLTgnKSwxLHRodW1iLGZhbmFydCxkZXNjLGdlbnJlLGRhdGUsY3JlZGl0cywnc291cmNlJykKICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0OiB0cmFjZWJhY2sucHJpbnRfZXhjKCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgaWYgbGVuKHNvdXJjZXMpID09IDE6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uoc291cmNlc1swXSwgbGlzdCk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXREYXRhKHNvdXJjZXNbMF1bMV0uZW5jb2RlKCd1dGYtOCcpLEZBTkFSVCkKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldERhdGEoc291cmNlc1swXVsndXJsJ10sIHNvdXJjZXNbMF1bJ2ZhbmFydCddKQogICAgICAgIGV4Y2VwdDogdHJhY2ViYWNrLnByaW50X2V4YygpCgpkZWYgYWRkU291cmNlKHVybD1Ob25lKToKICAgICAgICBpZiB1cmwgaXMgTm9uZToKICAgICAgICAgICAgaWYgbm90IGFkZG9uLmdldFNldHRpbmcoIm5ld19maWxlX3NvdXJjZSIpID09ICIiOgogICAgICAgICAgICAgICBzb3VyY2VfdXJsID0gYWRkb24uZ2V0U2V0dGluZygnbmV3X2ZpbGVfc291cmNlJykuZGVjb2RlKCd1dGYtOCcpCiAgICAgICAgICAgIGVsaWYgbm90IGFkZG9uLmdldFNldHRpbmcoIm5ld191cmxfc291cmNlIikgPT0gIiI6CiAgICAgICAgICAgICAgIHNvdXJjZV91cmwgPSBhZGRvbi5nZXRTZXR0aW5nKCduZXdfdXJsX3NvdXJjZScpLmRlY29kZSgndXRmLTgnKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNvdXJjZV91cmwgPSB1cmwKICAgICAgICBpZiBzb3VyY2VfdXJsID09ICcnIG9yIHNvdXJjZV91cmwgaXMgTm9uZToKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgYWRkb25fbG9nKCdBZGRpbmcgTmV3IFNvdXJjZTogJytzb3VyY2VfdXJsLmVuY29kZSgndXRmLTgnKSkKCiAgICAgICAgbWVkaWFfaW5mbyA9IE5vbmUKICAgICAgICAjcHJpbnQgJ3NvdXJjZV91cmwnLHNvdXJjZV91cmwKICAgICAgICBkYXRhID0gZ2V0U291cChzb3VyY2VfdXJsKQogICAgICAgICAgICAgICAgCiAgICAgICAgaWYgaXNpbnN0YW5jZShkYXRhLEJlYXV0aWZ1bFNPQVApOgogICAgICAgICAgICBpZiBkYXRhLmZpbmQoJ2NoYW5uZWxzX2luZm8nKToKICAgICAgICAgICAgICAgIG1lZGlhX2luZm8gPSBkYXRhLmNoYW5uZWxzX2luZm8KICAgICAgICAgICAgZWxpZiBkYXRhLmZpbmQoJ2l0ZW1zX2luZm8nKToKICAgICAgICAgICAgICAgIG1lZGlhX2luZm8gPSBkYXRhLml0ZW1zX2luZm8KICAgICAgICBpZiBtZWRpYV9pbmZvOgogICAgICAgICAgICBzb3VyY2VfbWVkaWEgPSB7fQogICAgICAgICAgICBzb3VyY2VfbWVkaWFbJ3VybCddID0gc291cmNlX3VybAogICAgICAgICAgICB0cnk6IHNvdXJjZV9tZWRpYVsndGl0bGUnXSA9IG1lZGlhX2luZm8udGl0bGUuc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgICAgICB0cnk6IHNvdXJjZV9tZWRpYVsndGh1bWJuYWlsJ10gPSBtZWRpYV9pbmZvLnRodW1ibmFpbC5zdHJpbmcKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIHRyeTogc291cmNlX21lZGlhWydmYW5hcnQnXSA9IG1lZGlhX2luZm8uZmFuYXJ0LnN0cmluZwogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgdHJ5OiBzb3VyY2VfbWVkaWFbJ2dlbnJlJ10gPSBtZWRpYV9pbmZvLmdlbnJlLnN0cmluZwogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgdHJ5OiBzb3VyY2VfbWVkaWFbJ2Rlc2NyaXB0aW9uJ10gPSBtZWRpYV9pbmZvLmRlc2NyaXB0aW9uLnN0cmluZwogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgdHJ5OiBzb3VyY2VfbWVkaWFbJ2RhdGUnXSA9IG1lZGlhX2luZm8uZGF0ZS5zdHJpbmcKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIHRyeTogc291cmNlX21lZGlhWydjcmVkaXRzJ10gPSBtZWRpYV9pbmZvLmNyZWRpdHMuc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGlmICcvJyBpbiBzb3VyY2VfdXJsOgogICAgICAgICAgICAgICAgbmFtZVN0ciA9IHNvdXJjZV91cmwuc3BsaXQoJy8nKVstMV0uc3BsaXQoJy4nKVswXQogICAgICAgICAgICBpZiAnXFwnIGluIHNvdXJjZV91cmw6CiAgICAgICAgICAgICAgICBuYW1lU3RyID0gc291cmNlX3VybC5zcGxpdCgnXFwnKVstMV0uc3BsaXQoJy4nKVswXQogICAgICAgICAgICBpZiAnJScgaW4gbmFtZVN0cjoKICAgICAgICAgICAgICAgIG5hbWVTdHIgPSB1cmxsaWIudW5xdW90ZV9wbHVzKG5hbWVTdHIpCiAgICAgICAgICAgIGtleWJvYXJkID0geGJtYy5LZXlib2FyZChuYW1lU3RyLCdEaXNwbGF5ZWQgTmFtZSwgUmVuYW1lPycpCiAgICAgICAgICAgIGtleWJvYXJkLmRvTW9kYWwoKQogICAgICAgICAgICBpZiAoa2V5Ym9hcmQuaXNDb25maXJtZWQoKSA9PSBGYWxzZSk6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgbmV3U3RyID0ga2V5Ym9hcmQuZ2V0VGV4dCgpCiAgICAgICAgICAgIGlmIGxlbihuZXdTdHIpID09IDA6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgc291cmNlX21lZGlhID0ge30KICAgICAgICAgICAgc291cmNlX21lZGlhWyd0aXRsZSddID0gbmV3U3RyCiAgICAgICAgICAgIHNvdXJjZV9tZWRpYVsndXJsJ10gPSBzb3VyY2VfdXJsCiAgICAgICAgICAgIHNvdXJjZV9tZWRpYVsnZmFuYXJ0J10gPSBmYW5hcnQKCiAgICAgICAgaWYgb3MucGF0aC5leGlzdHMocmVzb2x2ZXJzLnB5KT09RmFsc2U6CiAgICAgICAgICAgIHNvdXJjZV9saXN0ID0gW10KICAgICAgICAgICAgc291cmNlX2xpc3QuYXBwZW5kKHNvdXJjZV9tZWRpYSkKICAgICAgICAgICAgYiA9IG9wZW4ocmVzb2x2ZXJzLnB5LCJ3IikKICAgICAgICAgICAgYi53cml0ZShqc29uLmR1bXBzKHNvdXJjZV9saXN0KSkKICAgICAgICAgICAgYi5jbG9zZSgpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc291cmNlcyA9IGpzb24ubG9hZHMob3BlbihyZXNvbHZlcnMucHksInIiKS5yZWFkKCkpCiAgICAgICAgICAgIHNvdXJjZXMuYXBwZW5kKHNvdXJjZV9tZWRpYSkKICAgICAgICAgICAgYiA9IG9wZW4ocmVzb2x2ZXJzLnB5LCJ3IikKICAgICAgICAgICAgYi53cml0ZShqc29uLmR1bXBzKHNvdXJjZXMpKQogICAgICAgICAgICBiLmNsb3NlKCkKICAgICAgICBhZGRvbi5zZXRTZXR0aW5nKCduZXdfdXJsX3NvdXJjZScsICIiKQogICAgICAgIGFkZG9uLnNldFNldHRpbmcoJ25ld19maWxlX3NvdXJjZScsICIiKQogICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIlhCTUMuTm90aWZpY2F0aW9uKHdvcmxkSVBUVixOZXcgc291cmNlIGFkZGVkLiw1MDAwLCIraWNvbisiKSIpCiAgICAgICAgaWYgbm90IHVybCBpcyBOb25lOgogICAgICAgICAgICBpZiAneGJtY3BsdXMueGIuZnVucGljLmRlJyBpbiB1cmw6CiAgICAgICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCJYQk1DLkNvbnRhaW5lci5VcGRhdGUoJXM/bW9kZT0xNCxyZXBsYWNlKSIgJXN5cy5hcmd2WzBdKQogICAgICAgICAgICBlbGlmICdjb21tdW5pdHktbGlua3MnIGluIHVybDoKICAgICAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIlhCTUMuQ29udGFpbmVyLlVwZGF0ZSglcz9tb2RlPTEwLHJlcGxhY2UpIiAlc3lzLmFyZ3ZbMF0pCiAgICAgICAgZWxzZTogYWRkb24ub3BlblNldHRpbmdzKCkKCmRlZiBybVNvdXJjZShuYW1lKToKICAgICAgICBzb3VyY2VzID0ganNvbi5sb2FkcyhvcGVuKHJlc29sdmVycy5weSwiciIpLnJlYWQoKSkKICAgICAgICBmb3IgaW5kZXggaW4gcmFuZ2UobGVuKHNvdXJjZXMpKToKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShzb3VyY2VzW2luZGV4XSwgbGlzdCk6CiAgICAgICAgICAgICAgICBpZiBzb3VyY2VzW2luZGV4XVswXSA9PSBuYW1lOgogICAgICAgICAgICAgICAgICAgIGRlbCBzb3VyY2VzW2luZGV4XQogICAgICAgICAgICAgICAgICAgIGIgPSBvcGVuKHJlc29sdmVycy5weSwidyIpCiAgICAgICAgICAgICAgICAgICAgYi53cml0ZShqc29uLmR1bXBzKHNvdXJjZXMpKQogICAgICAgICAgICAgICAgICAgIGIuY2xvc2UoKQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpZiBzb3VyY2VzW2luZGV4XVsndGl0bGUnXSA9PSBuYW1lOgogICAgICAgICAgICAgICAgICAgIGRlbCBzb3VyY2VzW2luZGV4XQogICAgICAgICAgICAgICAgICAgIGIgPSBvcGVuKHJlc29sdmVycy5weSwidyIpCiAgICAgICAgICAgICAgICAgICAgYi53cml0ZShqc29uLmR1bXBzKHNvdXJjZXMpKQogICAgICAgICAgICAgICAgICAgIGIuY2xvc2UoKQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbigiWEJNQy5Db250YWluZXIuUmVmcmVzaCIpCgpkZWYgZ2V0X3htbF9kYXRhYmFzZSh1cmwsIGJyb3dzZT1GYWxzZSk6CiAgICAgICAgaWYgdXJsIGlzIE5vbmU6CiAgICAgICAgICAgIHVybCA9ICdodHRwOi8veGJtY3BsdXMueGIuZnVucGljLmRlL3d3dy1kYXRhL2ZpbGVzeXN0ZW0vJwogICAgICAgIHNvdXAgPSBCZWF1dGlmdWxTb3VwKG1ha2VSZXF1ZXN0KHVybCksIGNvbnZlcnRFbnRpdGllcz1CZWF1dGlmdWxTb3VwLkhUTUxfRU5USVRJRVMpCiAgICAgICAgZm9yIGkgaW4gc291cCgnYScpOgogICAgICAgICAgICBocmVmID0gaVsnaHJlZiddCiAgICAgICAgICAgIGlmIG5vdCBocmVmLnN0YXJ0c3dpdGgoJz8nKToKICAgICAgICAgICAgICAgIG5hbWUgPSBpLnN0cmluZwogICAgICAgICAgICAgICAgaWYgbmFtZSBub3QgaW4gWydQYXJlbnQgRGlyZWN0b3J5JywgJ3JlY3ljbGVfYmluLyddOgogICAgICAgICAgICAgICAgICAgIGlmIGhyZWYuZW5kc3dpdGgoJy8nKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgYnJvd3NlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyKG5hbWUsdXJsK2hyZWYsMTUsaWNvbixmYW5hcnQsJycsJycsJycpCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGREaXIobmFtZSx1cmwraHJlZiwxNCxpY29uLGZhbmFydCwnJywnJywnJykKICAgICAgICAgICAgICAgICAgICBlbGlmIGhyZWYuZW5kc3dpdGgoJy54bWwnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgYnJvd3NlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyKG5hbWUsdXJsK2hyZWYsMSxpY29uLGZhbmFydCwnJywnJywnJywnJywnZG93bmxvYWQnKQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgb3MucGF0aC5leGlzdHMocmVzb2x2ZXJzLnB5KT09VHJ1ZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBuYW1lIGluIFNPVVJDRVM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihuYW1lKycgKGluIHVzZSknLHVybCtocmVmLDExLGljb24sZmFuYXJ0LCcnLCcnLCcnLCcnLCdkb3dubG9hZCcpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyKG5hbWUsdXJsK2hyZWYsMTEsaWNvbixmYW5hcnQsJycsJycsJycsJycsJ2Rvd25sb2FkJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGlyKG5hbWUsdXJsK2hyZWYsMTEsaWNvbixmYW5hcnQsJycsJycsJycsJycsJ2Rvd25sb2FkJykKCgpkZWYgZ2V0Q29tbXVuaXR5U291cmNlcyhicm93c2U9RmFsc2UpOgogICAgICAgIHVybCA9ICdodHRwOi8vY29tbXVuaXR5LWxpbmtzLmdvb2dsZWNvZGUuY29tL3N2bi90cnVuay8nCiAgICAgICAgc291cCA9IEJlYXV0aWZ1bFNvdXAobWFrZVJlcXVlc3QodXJsKSwgY29udmVydEVudGl0aWVzPUJlYXV0aWZ1bFNvdXAuSFRNTF9FTlRJVElFUykKICAgICAgICBmaWxlcyA9IHNvdXAoJ3VsJylbMF0oJ2xpJylbMTpdCiAgICAgICAgZm9yIGkgaW4gZmlsZXM6CiAgICAgICAgICAgIG5hbWUgPSBpKCdhJylbMF1bJ2hyZWYnXQogICAgICAgICAgICBpZiBicm93c2U6CiAgICAgICAgICAgICAgICBhZGREaXIobmFtZSx1cmwrbmFtZSwxLGljb24sZmFuYXJ0LCcnLCcnLCcnLCcnLCdkb3dubG9hZCcpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBhZGREaXIobmFtZSx1cmwrbmFtZSwxMSxpY29uLGZhbmFydCwnJywnJywnJywnJywnZG93bmxvYWQnKQoKZGVmIGdldFNvdXAodXJsLGRhdGE9Tm9uZSk6CiAgICAgICAgZ2xvYmFsIHZpZXdtb2RlLHRzZG93bmxvYWRlcgogICAgICAgIHRzZG93bmxvYWRlcj1GYWxzZQogICAgICAgIGlmIHVybC5zdGFydHN3aXRoKCdodHRwOi8vJykgb3IgdXJsLnN0YXJ0c3dpdGgoJ2h0dHBzOi8vJyk6CiAgICAgICAgICAgIGVuY2tleT1GYWxzZQogICAgICAgICAgICBpZiAnJCRUU0RPV05MT0FERVIkJCcgaW4gdXJsOgogICAgICAgICAgICAgICAgdHNkb3dubG9hZGVyPVRydWUKICAgICAgICAgICAgICAgIHVybD11cmwucmVwbGFjZSgiJCRUU0RPV05MT0FERVIkJCIsIiIpCiAgICAgICAgICAgIGlmICckJExTUHJvRW5jS2V5PScgaW4gdXJsOgogICAgICAgICAgICAgICAgZW5ja2V5PXVybC5zcGxpdCgnJCRMU1Byb0VuY0tleT0nKVsxXS5zcGxpdCgnJCQnKVswXQogICAgICAgICAgICAgICAgcnA9JyQkTFNQcm9FbmNLZXk9JXMkJCclZW5ja2V5CiAgICAgICAgICAgICAgICB1cmw9dXJsLnJlcGxhY2UocnAsIiIpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgZGF0YSA9bWFrZVJlcXVlc3QodXJsKQogICAgICAgICAgICBpZiBlbmNrZXk6CiAgICAgICAgICAgICAgICAgICAgaW1wb3J0IHB5YWVzCiAgICAgICAgICAgICAgICAgICAgZW5ja2V5PWVuY2tleS5lbmNvZGUoImFzY2lpIikKICAgICAgICAgICAgICAgICAgICBwcmludCBlbmNrZXkKICAgICAgICAgICAgICAgICAgICBtaXNzaW5nYnl0ZXM9MTYtbGVuKGVuY2tleSkKICAgICAgICAgICAgICAgICAgICBlbmNrZXk9ZW5ja2V5KyhjaHIoMCkqKG1pc3NpbmdieXRlcykpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgcmVwcihlbmNrZXkpCiAgICAgICAgICAgICAgICAgICAgZGF0YT1iYXNlNjQuYjY0ZGVjb2RlKGRhdGEpCiAgICAgICAgICAgICAgICAgICAgZGVjcnlwdG9yID0gcHlhZXMubmV3KGVuY2tleSAsIHB5YWVzLk1PREVfRUNCLCBJVj1Ob25lKQogICAgICAgICAgICAgICAgICAgIGRhdGE9ZGVjcnlwdG9yLmRlY3J5cHQoZGF0YSkuc3BsaXQoJ1wwJylbMF0KICAgICAgICAgICAgICAgICAgICAjcHJpbnQgcmVwcihkYXRhKQogICAgICAgICAgICBpZiByZS5zZWFyY2goIiNFWFRNM1UiLGRhdGEpIG9yICdtM3UnIGluIHVybDoKIyAgICAgICAgICAgICAgICBwcmludCAnZm91bmQgbTN1IGRhdGEnCiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YQogICAgICAgIGVsaWYgZGF0YSA9PSBOb25lOgogICAgICAgICAgICBpZiBub3QgJy8nICBpbiB1cmwgb3Igbm90ICdcXCcgaW4gdXJsOgojICAgICAgICAgICAgICAgIHByaW50ICdObyBkaXJlY3RvcnkgZm91bmQuIExldHMgbWFrZSB0aGUgdXJsIHRvIGNhY2hlIGRpcicKICAgICAgICAgICAgICAgIHVybCA9IG9zLnBhdGguam9pbihjb21tdW5pdHlmaWxlcyx1cmwpCiAgICAgICAgICAgIGlmIHhibWN2ZnMuZXhpc3RzKHVybCk6CiAgICAgICAgICAgICAgICBpZiB1cmwuc3RhcnRzd2l0aCgic21iOi8vIikgb3IgdXJsLnN0YXJ0c3dpdGgoIm5mczovLyIpOgogICAgICAgICAgICAgICAgICAgIGNvcHkgPSB4Ym1jdmZzLmNvcHkodXJsLCBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ3RlbXAnLCAnc29yY2VfdGVtcC50eHQnKSkKICAgICAgICAgICAgICAgICAgICBpZiBjb3B5OgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gb3Blbihvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ3RlbXAnLCAnc29yY2VfdGVtcC50eHQnKSwgInIiKS5yZWFkKCkKICAgICAgICAgICAgICAgICAgICAgICAgeGJtY3Zmcy5kZWxldGUob3MucGF0aC5qb2luKHByb2ZpbGUsICd0ZW1wJywgJ3NvcmNlX3RlbXAudHh0JykpCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgYWRkb25fbG9nKCJmYWlsZWQgdG8gY29weSBmcm9tIHNtYjoiKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBkYXRhID0gb3Blbih1cmwsICdyJykucmVhZCgpCiAgICAgICAgICAgICAgICAgICAgaWYgcmUubWF0Y2goIiNFWFRNM1UiLGRhdGEpb3IgJ20zdScgaW4gdXJsOgojICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgJ2ZvdW5kIG0zdSBkYXRhJwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgYWRkb25fbG9nKCJTb3VwIERhdGEgbm90IGZvdW5kISIpCiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICBpZiAnPFNldFZpZXdNb2RlPicgaW4gZGF0YToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdmlld21vZGU9cmUuZmluZGFsbCgnPFNldFZpZXdNb2RlPiguKj8pPCcsZGF0YSlbMF0KICAgICAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIkNvbnRhaW5lci5TZXRWaWV3TW9kZSglcykiJXZpZXdtb2RlKQogICAgICAgICAgICAgICAgcHJpbnQgJ2RvbmUgc2V0dmlldycsdmlld21vZGUKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgcmV0dXJuIEJlYXV0aWZ1bFNPQVAoZGF0YSwgY29udmVydEVudGl0aWVzPUJlYXV0aWZ1bFN0b25lU291cC5YTUxfRU5USVRJRVMpCgoKZGVmIGdldERhdGEodXJsLGZhbmFydCwgZGF0YT1Ob25lKToKICAgIGltcG9ydCBjaGVja2JhZAogICAgY2hlY2tiYWQuZG9fYmxvY2tfY2hlY2soRmFsc2UpCiAgICBzb3VwID0gZ2V0U291cCh1cmwsZGF0YSkKICAgICNwcmludCB0eXBlKHNvdXApCiAgICBpZiBpc2luc3RhbmNlKHNvdXAsQmVhdXRpZnVsU09BUCk6CiAgICAjcHJpbnQgJ3h4eHh4eHh4eHhzb3VwJyxzb3VwCiAgICAgICAgaWYgbGVuKHNvdXAoJ2NoYW5uZWxzJykpID4gMCBhbmQgYWRkb24uZ2V0U2V0dGluZygnZG9ub3RzaG93YnljaGFubmVscycpID09ICdmYWxzZSc6CiAgICAgICAgICAgIGNoYW5uZWxzID0gc291cCgnY2hhbm5lbCcpCiAgICAgICAgICAgIGZvciBjaGFubmVsIGluIGNoYW5uZWxzOgojICAgICAgICAgICAgICAgIHByaW50IGNoYW5uZWwKCiAgICAgICAgICAgICAgICBsaW5rZWRVcmw9JycKICAgICAgICAgICAgICAgIGxjb3VudD0wCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgbGlua2VkVXJsID0gIGNoYW5uZWwoJ2V4dGVybmFsbGluaycpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgICAgIGxjb3VudD1sZW4oY2hhbm5lbCgnZXh0ZXJuYWxsaW5rJykpCiAgICAgICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgICAgICNwcmludCAnbGlua2VkVXJsJyxsaW5rZWRVcmwsbGNvdW50CiAgICAgICAgICAgICAgICBpZiBsY291bnQ+MTogbGlua2VkVXJsPScnCgogICAgICAgICAgICAgICAgbmFtZSA9IGNoYW5uZWwoJ25hbWUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIHRodW1ibmFpbCA9IGNoYW5uZWwoJ3RodW1ibmFpbCcpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgdGh1bWJuYWlsID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgdGh1bWJuYWlsID0gJycKCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgaWYgbm90IGNoYW5uZWwoJ2ZhbmFydCcpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBhZGRvbi5nZXRTZXR0aW5nKCd1c2VfdGh1bWInKSA9PSAidHJ1ZSI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSB0aHVtYm5haWwKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbkFydCA9IGZhbmFydAogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIGZhbkFydCA9IGNoYW5uZWwoJ2ZhbmFydCcpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgICAgIGlmIGZhbkFydCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgICAgIGZhbkFydCA9IGZhbmFydAoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBkZXNjID0gY2hhbm5lbCgnaW5mbycpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgICAgIGlmIGRlc2MgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICBkZXNjID0gJycKCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgZ2VucmUgPSBjaGFubmVsKCdnZW5yZScpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgICAgIGlmIGdlbnJlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgZ2VucmUgPSAnJwoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBkYXRlID0gY2hhbm5lbCgnZGF0ZScpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgICAgIGlmIGRhdGUgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICBkYXRlID0gJycKCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgY3JlZGl0cyA9IGNoYW5uZWwoJ2NyZWRpdHMnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICBpZiBjcmVkaXRzID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgY3JlZGl0cyA9ICcnCgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGlmIGxpbmtlZFVybD09Jyc6CiAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihuYW1lLmVuY29kZSgndXRmLTgnLCAnaWdub3JlJyksdXJsLmVuY29kZSgndXRmLTgnKSwyLHRodW1ibmFpbCxmYW5BcnQsZGVzYyxnZW5yZSxkYXRlLGNyZWRpdHMsVHJ1ZSkKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAjcHJpbnQgbGlua2VkVXJsCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihuYW1lLmVuY29kZSgndXRmLTgnKSxsaW5rZWRVcmwuZW5jb2RlKCd1dGYtOCcpLDEsdGh1bWJuYWlsLGZhbkFydCxkZXNjLGdlbnJlLGRhdGUsTm9uZSwnc291cmNlJykKICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICBhZGRvbl9sb2coJ1RoZXJlIHdhcyBhIHByb2JsZW0gYWRkaW5nIGRpcmVjdG9yeSBmcm9tIGdldERhdGEoKTogJytuYW1lLmVuY29kZSgndXRmLTgnLCAnaWdub3JlJykpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYWRkb25fbG9nKCdObyBDaGFubmVsczogZ2V0SXRlbXMnKQogICAgICAgICAgICBnZXRJdGVtcyhzb3VwKCdpdGVtJyksZmFuYXJ0KQogICAgZWxzZToKICAgICAgICBwYXJzZV9tM3Uoc291cCkKIyBib3Jyb3cgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZW5lbjkyL1AyUC1TdHJlYW1zLVhCTUMvYmxvYi9tYXN0ZXIvcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zL3Jlc291cmNlcy9jb3JlL2xpdmVzdHJlYW1zLnB5CiMgVGhpcyB3aWxsIG5vdCBnbyB0aHJvdWdoIHRoZSBnZXRJdGVtcyBmdW5jdGlvbnMgKCBtZWFucyB5b3UgbXVzdCBoYXZlIHJlYWR5IHRvIHBsYXkgdXJsLCBubyByZWdleCkKZGVmIHBhcnNlX20zdShkYXRhKToKICAgIGNvbnRlbnQgPSBkYXRhLnJzdHJpcCgpCiAgICBtYXRjaCA9IHJlLmNvbXBpbGUocicjRVhUSU5GOiguKz8pLCguKj8pW1xuXHJdKyhbXlxyXG5dKyknKS5maW5kYWxsKGNvbnRlbnQpCiAgICB0b3RhbCA9IGxlbihtYXRjaCkKICAgIHByaW50ICd0c2Rvd25sb2FkZXInLHRzZG93bmxvYWRlcgojICAgIHByaW50ICd0b3RhbCBtM3UgbGlua3MnLHRvdGFsCiAgICBmb3Igb3RoZXIsY2hhbm5lbF9uYW1lLHN0cmVhbV91cmwgaW4gbWF0Y2g6CiAgICAgICAgCiAgICAgICAgaWYgJ3R2Zy1sb2dvJyBpbiBvdGhlcjoKICAgICAgICAgICAgdGh1bWJuYWlsID0gcmVfbWUob3RoZXIsJ3R2Zy1sb2dvPVtcJyJdKC4qPylbXCciXScpCiAgICAgICAgICAgIGlmIHRodW1ibmFpbDoKICAgICAgICAgICAgICAgIGlmIHRodW1ibmFpbC5zdGFydHN3aXRoKCdodHRwJyk6CiAgICAgICAgICAgICAgICAgICAgdGh1bWJuYWlsID0gdGh1bWJuYWlsCgogICAgICAgICAgICAgICAgZWxpZiBub3QgYWRkb24uZ2V0U2V0dGluZygnbG9nby1mb2xkZXJQYXRoJykgPT0gIiI6CiAgICAgICAgICAgICAgICAgICAgbG9nb191cmwgPSBhZGRvbi5nZXRTZXR0aW5nKCdsb2dvLWZvbGRlclBhdGgnKQogICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbCA9IGxvZ29fdXJsICsgdGh1bWJuYWlsCgogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWwgPSB0aHVtYm5haWwKICAgICAgICAgICAgI2Vsc2U6CgogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHRodW1ibmFpbCA9ICcnCiAgICAgICAgCiAgICAgICAgaWYgJ3R5cGUnIGluIG90aGVyOgogICAgICAgICAgICBtb2RlX3R5cGUgPSByZV9tZShvdGhlciwndHlwZT1bXCciXSguKj8pW1wnIl0nKQogICAgICAgICAgICBpZiBtb2RlX3R5cGUgPT0gJ3l0LWRsJzoKICAgICAgICAgICAgICAgIHN0cmVhbV91cmwgPSBzdHJlYW1fdXJsICsiJm1vZGU9MTgiCiAgICAgICAgICAgIGVsaWYgbW9kZV90eXBlID09ICdyZWdleCc6CiAgICAgICAgICAgICAgICB1cmwgPSBzdHJlYW1fdXJsLnNwbGl0KCcmcmVnZXhzPScpCiAgICAgICAgICAgICAgICAjcHJpbnQgdXJsWzBdIGdldFNvdXAodXJsLGRhdGE9Tm9uZSkKICAgICAgICAgICAgICAgIHJlZ2V4cyA9IHBhcnNlX3JlZ2V4KGdldFNvdXAoJycsZGF0YT11cmxbMV0pKQoKICAgICAgICAgICAgICAgIGFkZExpbmsodXJsWzBdLCBjaGFubmVsX25hbWUsdGh1bWJuYWlsLCcnLCcnLCcnLCcnLCcnLE5vbmUscmVnZXhzLHRvdGFsKQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgZWxpZiBtb2RlX3R5cGUgPT0gJ2Z0dic6CiAgICAgICAgICAgICAgICBzdHJlYW1fdXJsID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5GLlQuVi8/bmFtZT0nK3VybGxpYi5xdW90ZShjaGFubmVsX25hbWUpICsnJnVybD0nICtzdHJlYW1fdXJsICsnJm1vZGU9MTI1JmNoX2ZhbmFydD1uYScKICAgICAgICBlbGlmIHRzZG93bmxvYWRlciBhbmQgJy50cycgaW4gc3RyZWFtX3VybDoKICAgICAgICAgICAgc3RyZWFtX3VybCA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8uZjRtVGVzdGVyLz91cmw9Jyt1cmxsaWIucXVvdGVfcGx1cyhzdHJlYW1fdXJsKSsnJmFtcDtzdHJlYW10eXBlPVRTRE9XTkxPQURFUiZuYW1lPScrdXJsbGliLnF1b3RlKGNoYW5uZWxfbmFtZSkKICAgICAgICBhZGRMaW5rKHN0cmVhbV91cmwsIGNoYW5uZWxfbmFtZSx0aHVtYm5haWwsJycsJycsJycsJycsJycsTm9uZSwnJyx0b3RhbCkKZGVmIGdldENoYW5uZWxJdGVtcyhuYW1lLHVybCxmYW5hcnQpOgogICAgICAgIHNvdXAgPSBnZXRTb3VwKHVybCkKICAgICAgICBjaGFubmVsX2xpc3QgPSBzb3VwLmZpbmQoJ2NoYW5uZWwnLCBhdHRycz17J25hbWUnIDogbmFtZS5kZWNvZGUoJ3V0Zi04Jyl9KQogICAgICAgIGl0ZW1zID0gY2hhbm5lbF9saXN0KCdpdGVtJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZhbkFydCA9IGNoYW5uZWxfbGlzdCgnZmFuYXJ0JylbMF0uc3RyaW5nCiAgICAgICAgICAgIGlmIGZhbkFydCA9PSBOb25lOgogICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIGZhbkFydCA9IGZhbmFydAogICAgICAgIGZvciBjaGFubmVsIGluIGNoYW5uZWxfbGlzdCgnc3ViY2hhbm5lbCcpOgogICAgICAgICAgICBuYW1lID0gY2hhbm5lbCgnbmFtZScpWzBdLnN0cmluZwogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB0aHVtYm5haWwgPSBjaGFubmVsKCd0aHVtYm5haWwnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIHRodW1ibmFpbCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIHRodW1ibmFpbCA9ICcnCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlmIG5vdCBjaGFubmVsKCdmYW5hcnQnKToKICAgICAgICAgICAgICAgICAgICBpZiBhZGRvbi5nZXRTZXR0aW5nKCd1c2VfdGh1bWInKSA9PSAidHJ1ZSI6CiAgICAgICAgICAgICAgICAgICAgICAgIGZhbkFydCA9IHRodW1ibmFpbAogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSBjaGFubmVsKCdmYW5hcnQnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGZhbkFydCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZGVzYyA9IGNoYW5uZWwoJ2luZm8nKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGRlc2MgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBkZXNjID0gJycKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGdlbnJlID0gY2hhbm5lbCgnZ2VucmUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGdlbnJlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgZ2VucmUgPSAnJwoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZGF0ZSA9IGNoYW5uZWwoJ2RhdGUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGRhdGUgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBkYXRlID0gJycKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGNyZWRpdHMgPSBjaGFubmVsKCdjcmVkaXRzJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICBpZiBjcmVkaXRzID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgY3JlZGl0cyA9ICcnCgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBhZGREaXIobmFtZS5lbmNvZGUoJ3V0Zi04JywgJ2lnbm9yZScpLHVybC5lbmNvZGUoJ3V0Zi04JyksMyx0aHVtYm5haWwsZmFuQXJ0LGRlc2MsZ2VucmUsY3JlZGl0cyxkYXRlKQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBhZGRvbl9sb2coJ1RoZXJlIHdhcyBhIHByb2JsZW0gYWRkaW5nIGRpcmVjdG9yeSAtICcrbmFtZS5lbmNvZGUoJ3V0Zi04JywgJ2lnbm9yZScpKQogICAgICAgIGdldEl0ZW1zKGl0ZW1zLGZhbkFydCkKCgpkZWYgZ2V0U3ViQ2hhbm5lbEl0ZW1zKG5hbWUsdXJsLGZhbmFydCk6CiAgICAgICAgc291cCA9IGdldFNvdXAodXJsKQogICAgICAgIGNoYW5uZWxfbGlzdCA9IHNvdXAuZmluZCgnc3ViY2hhbm5lbCcsIGF0dHJzPXsnbmFtZScgOiBuYW1lLmRlY29kZSgndXRmLTgnKX0pCiAgICAgICAgaXRlbXMgPSBjaGFubmVsX2xpc3QoJ3N1Yml0ZW0nKQogICAgICAgIGdldEl0ZW1zKGl0ZW1zLGZhbmFydCkKCmRlZiBnZXRJdGVtcyhpdGVtcyxmYW5hcnQsZG9udExpbms9RmFsc2UpOgogICAgICAgIHRvdGFsID0gbGVuKGl0ZW1zKQogICAgICAgIGFkZG9uX2xvZygnVG90YWwgSXRlbXM6ICVzJyAldG90YWwpCiAgICAgICAgYWRkX3BsYXlsaXN0ID0gYWRkb24uZ2V0U2V0dGluZygnYWRkX3BsYXlsaXN0JykKICAgICAgICBhc2tfcGxheWxpc3RfaXRlbXMgPWFkZG9uLmdldFNldHRpbmcoJ2Fza19wbGF5bGlzdF9pdGVtcycpCiAgICAgICAgdXNlX3RodW1iID0gYWRkb24uZ2V0U2V0dGluZygndXNlX3RodW1iJykKICAgICAgICBwYXJlbnRhbGJsb2NrID1hZGRvbi5nZXRTZXR0aW5nKCdwYXJlbnRhbGJsb2NrZWQnKQogICAgICAgIHBhcmVudGFsYmxvY2s9IHBhcmVudGFsYmxvY2s9PSJ0cnVlIgogICAgICAgIGZvciBpdGVtIGluIGl0ZW1zOgogICAgICAgICAgICBpc1hNTFNvdXJjZT1GYWxzZQogICAgICAgICAgICBpc0pzb25ycGMgPSBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgYXBwbHlibG9jaz0nZmFsc2UnCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGFwcGx5YmxvY2sgPSBpdGVtKCdwYXJlbnRhbGJsb2NrJylbMF0uc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygncGFyZW50YWxibG9jayBFcnJvcicpCiAgICAgICAgICAgICAgICBhcHBseWJsb2NrID0gJycKICAgICAgICAgICAgaWYgYXBwbHlibG9jaz09J3RydWUnIGFuZCBwYXJlbnRhbGJsb2NrOiBjb250aW51ZQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIG5hbWUgPSBpdGVtKCd0aXRsZScpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgbmFtZSBpcyBOb25lOgogICAgICAgICAgICAgICAgICAgIG5hbWUgPSAndW5rbm93bj8nCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnTmFtZSBFcnJvcicpCiAgICAgICAgICAgICAgICBuYW1lID0gJycKCgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpZiBpdGVtKCdlcGcnKToKICAgICAgICAgICAgICAgICAgICBpZiBpdGVtLmVwZ191cmw6CiAgICAgICAgICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnR2V0IEVQRyBSZWdleCcpCiAgICAgICAgICAgICAgICAgICAgICAgIGVwZ191cmwgPSBpdGVtLmVwZ191cmwuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIGVwZ19yZWdleCA9IGl0ZW0uZXBnX3JlZ2V4LnN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICBlcGdfbmFtZSA9IGdldF9lcGcoZXBnX3VybCwgZXBnX3JlZ2V4KQogICAgICAgICAgICAgICAgICAgICAgICBpZiBlcGdfbmFtZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgKz0gJyAtICcgKyBlcGdfbmFtZQogICAgICAgICAgICAgICAgICAgIGVsaWYgaXRlbSgnZXBnJylbMF0uc3RyaW5nID4gMToKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSArPSBnZXRlcGcoaXRlbSgnZXBnJylbMF0uc3RyaW5nKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnRVBHIEVycm9yJykKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdXJsID0gW10KICAgICAgICAgICAgICAgIGlmIGxlbihpdGVtKCdsaW5rJykpID4wOgogICAgICAgICAgICAgICAgICAgICNwcmludCAnaXRlbSBsaW5rJywgaXRlbSgnbGluaycpCgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ2xpbmsnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwuYXBwZW5kKGkuc3RyaW5nKQoKICAgICAgICAgICAgICAgIGVsaWYgbGVuKGl0ZW0oJ3Nwb3J0c2RldmlsJykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ3Nwb3J0c2RldmlsJyk6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBpLnN0cmluZyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRzZGV2aWwgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLlNwb3J0c0RldmlsLz9tb2RlPTEmYW1wO2l0ZW09Y2F0Y2hlciUzZHN0cmVhbXMlMjZ1cmw9JyAraS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZmVyZXIgPSBpdGVtKCdyZWZlcmVyJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiByZWZlcmVyOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNwcmludCAncmVmZXJlciBmb3VuZCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcG9ydHNkZXZpbCA9IHNwb3J0c2RldmlsICsgJyUyNnJlZmVyZXI9JyArcmVmZXJlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChzcG9ydHNkZXZpbCkKICAgICAgICAgICAgICAgIGVsaWYgbGVuKGl0ZW0oJ3AycCcpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdwMnAnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnc29wOi8vJyBpbiBpLnN0cmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3AgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz9tb2RlPTJ1cmw9JytpLnN0cmluZyArJyYnICsgJ25hbWU9JytuYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChzb3ApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAycD0ncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz9tb2RlPTEmdXJsPScraS5zdHJpbmcgKycmJyArICduYW1lPScrbmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQocDJwKQogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgndmF1Z2huJykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ3ZhdWdobicpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhdWdobiA9ICdwbHVnaW46Ly9wbHVnaW4uc3RyZWFtLnZhdWdobmxpdmUudHYvP21vZGU9UGxheUxpdmVTdHJlYW0mYW1wO2NoYW5uZWw9JytpLnN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZCh2YXVnaG4pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdpbGl2ZScpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdpbGl2ZScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCAnaHR0cCcgaW4gaS5zdHJpbmc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWxpdmUgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnRiaC5pbGl2ZS8/dXJsPWh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by92aWV3LycraS5zdHJpbmcrJyZhbXA7bGluaz05OSZhbXA7bW9kZT1pTGl2ZVBsYXknCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlsaXZlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby50YmguaWxpdmUvP3VybD0nK2kuc3RyaW5nKycmYW1wO2xpbms9OTkmYW1wO21vZGU9aUxpdmVQbGF5JwogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgneXQtZGwnKSkgPjA6CiAgICAgICAgICAgICAgICAgICAgZm9yIGkgaW4gaXRlbSgneXQtZGwnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5dGRsID0gaS5zdHJpbmcgKyAnJm1vZGU9MTgnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwuYXBwZW5kKHl0ZGwpCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdkbScpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdkbScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRtID0gInBsdWdpbjovL3BsdWdpbi52aWRlby5kYWlseW1vdGlvbl9jb20vP21vZGU9cGxheVZpZGVvJnVybD0iICsgaS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQoZG0pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdkbWxpdmUnKSkgPjA6CiAgICAgICAgICAgICAgICAgICAgZm9yIGkgaW4gaXRlbSgnZG1saXZlJyk6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBpLnN0cmluZyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG0gPSAicGx1Z2luOi8vcGx1Z2luLnZpZGVvLmRhaWx5bW90aW9uX2NvbS8/bW9kZT1wbGF5TGl2ZVZpZGVvJnVybD0iICsgaS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQoZG0pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCd1dHViZScpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCd1dHViZScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICcgJyBpbiBpLnN0cmluZyA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXR1YmUgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnlvdXR1YmUvc2VhcmNoLz9xPScrIHVybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSnNvbnJwYz11dHViZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBsZW4oaS5zdHJpbmcpID09IDExOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0dWJlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3BsYXkvP3ZpZGVvX2lkPScrIGkuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmIChpLnN0cmluZy5zdGFydHN3aXRoKCdQTCcpIGFuZCBub3QgJyZvcmRlcj0nIGluIGkuc3RyaW5nKSBvciBpLnN0cmluZy5zdGFydHN3aXRoKCdVVScpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0dWJlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3BsYXkvPyZvcmRlcj1kZWZhdWx0JnBsYXlsaXN0X2lkPScgKyBpLnN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBpLnN0cmluZy5zdGFydHN3aXRoKCdQTCcpIG9yIGkuc3RyaW5nLnN0YXJ0c3dpdGgoJ1VVJyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXR1YmUgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnlvdXR1YmUvcGxheS8/cGxheWxpc3RfaWQ9JyArIGkuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGkuc3RyaW5nLnN0YXJ0c3dpdGgoJ1VDJykgYW5kIGxlbihpLnN0cmluZykgPiAxMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dHViZSA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8ueW91dHViZS9jaGFubmVsLycgKyBpLnN0cmluZyArICcvJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSnNvbnJwYz11dHViZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBub3QgaS5zdHJpbmcuc3RhcnRzd2l0aCgnVUMnKSBhbmQgbm90IChpLnN0cmluZy5zdGFydHN3aXRoKCdQTCcpKSAgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0dWJlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3VzZXIvJyArIGkuc3RyaW5nICsgJy8nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNKc29ucnBjPXV0dWJlCiAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQodXR1YmUpCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdpbWRiJykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ2ltZGInKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBhZGRvbi5nZXRTZXR0aW5nKCdnZW5lc2lzb3JwdWxzYXInKSA9PSAnMCc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1kYiA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8uZ2VuZXNpcy8/YWN0aW9uPXBsYXkmaW1kYj0nK2kuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZGIgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnB1bHNhci9tb3ZpZS90dCcraS5zdHJpbmcrJy9wbGF5JwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChpbWRiKQogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgnZjRtJykpID4wOgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdmNG0nKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBpLnN0cmluZyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICcuZjRtJyBpbiBpLnN0cmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjRtID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5mNG1UZXN0ZXIvP3VybD0nK3VybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgJy5tM3U4JyBpbiBpLnN0cmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjRtID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5mNG1UZXN0ZXIvP3VybD0nK3VybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKSsnJmFtcDtzdHJlYW10eXBlPUhMUycKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjRtID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5mNG1UZXN0ZXIvP3VybD0nK3VybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKSsnJmFtcDtzdHJlYW10eXBlPVNJTVBMRScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQoZjRtKQogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgnZnR2JykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ2Z0dicpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ0diA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8uRi5ULlYvP25hbWU9Jyt1cmxsaWIucXVvdGUobmFtZSkgKycmdXJsPScgK2kuc3RyaW5nICsnJm1vZGU9MTI1JmNoX2ZhbmFydD1uYScKICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChmdHYpCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCd1cmxzb2x2ZScpKSA+MDoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCd1cmxzb2x2ZScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVyID0gaS5zdHJpbmcgKycmbW9kZT0xOScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQocmVzb2x2ZXIpCiAgICAgICAgICAgICAgICBpZiBsZW4odXJsKSA8IDE6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgYWRkb25fbG9nKCdFcnJvciA8bGluaz4gZWxlbWVudCwgUGFzc2luZzonK25hbWUuZW5jb2RlKCd1dGYtOCcsICdpZ25vcmUnKSkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlzWE1MU291cmNlID0gaXRlbSgnZXh0ZXJuYWxsaW5rJylbMF0uc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwoKICAgICAgICAgICAgaWYgaXNYTUxTb3VyY2U6CiAgICAgICAgICAgICAgICBleHRfdXJsPVtpc1hNTFNvdXJjZV0KICAgICAgICAgICAgICAgIGlzWE1MU291cmNlPVRydWUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGlzWE1MU291cmNlPUZhbHNlCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlzSnNvbnJwYyA9IGl0ZW0oJ2pzb25ycGMnKVswXS5zdHJpbmcKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIGlmIGlzSnNvbnJwYzoKCiAgICAgICAgICAgICAgICBleHRfdXJsPVtpc0pzb25ycGNdCiAgICAgICAgICAgICAgICAjcHJpbnQgJ0pTT04tUlBDIGV4dF91cmwnLGV4dF91cmwKICAgICAgICAgICAgICAgIGlzSnNvbnJwYz1UcnVlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpc0pzb25ycGM9RmFsc2UKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdGh1bWJuYWlsID0gaXRlbSgndGh1bWJuYWlsJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICBpZiB0aHVtYm5haWwgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICB0aHVtYm5haWwgPSAnJwogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpZiBub3QgaXRlbSgnZmFuYXJ0Jyk6CiAgICAgICAgICAgICAgICAgICAgaWYgYWRkb24uZ2V0U2V0dGluZygndXNlX3RodW1iJykgPT0gInRydWUiOgogICAgICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSB0aHVtYm5haWwKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSBmYW5hcnQKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgZmFuQXJ0ID0gaXRlbSgnZmFuYXJ0JylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICBpZiBmYW5BcnQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBmYW5BcnQgPSBmYW5hcnQKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZGVzYyA9IGl0ZW0oJ2luZm8nKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGRlc2MgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBkZXNjID0gJycKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGdlbnJlID0gaXRlbSgnZ2VucmUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGdlbnJlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgZ2VucmUgPSAnJwoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZGF0ZSA9IGl0ZW0oJ2RhdGUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGRhdGUgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBkYXRlID0gJycKCiAgICAgICAgICAgIHJlZ2V4cyA9IE5vbmUKICAgICAgICAgICAgaWYgaXRlbSgncmVnZXgnKToKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICByZWdfaXRlbSA9IGl0ZW0oJ3JlZ2V4JykKICAgICAgICAgICAgICAgICAgICByZWdleHMgPSBwYXJzZV9yZWdleChyZWdfaXRlbSkKICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgbGVuKHVybCkgPiAxOgogICAgICAgICAgICAgICAgICAgIGFsdCA9IDAKICAgICAgICAgICAgICAgICAgICBwbGF5bGlzdCA9IFtdCiAgICAgICAgICAgICAgICAgICAgaWdub3JlbGlzdHNldHRpbmc9VHJ1ZSBpZiAnJCRMU1BsYXlPbmx5T25lJCQnIGluIHVybFswXSBlbHNlIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZm9y'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))