'''   123MoviesHD.tv| Stream TVsupertuga   Copyright (C) 2017 Mister-X   This program is free software: you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation, either version 3 of the License, or   (at your option) any later version.   This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License   along with this program.  If not, see <http://www.gnu.org/licenses/>.'''import urllib,urllib2,re,xbmcplugin,xbmcgui,urlresolver,sys,xbmc,xbmcaddon,os,urlparse,base64from t0mm0.common.addon import Addonfrom metahandler import metahandlersfrom resources.lib import utilsaddon_id = utils.addon_idaddDir = utils.addDiraddLink = utils.addLinkselfAddon = utils.selfAddonaddon = utils.addonfanart = utils.fanarticon = utils.addonnext = utils.nextart = utils.artname = utils.namemode = utils.modeurl = utils.urliconimage = utils.iconimagesite = utils.sitesetView = utils.setViewopen_url = utils.open_urlBASEURL = 'https://123movieshd.tv'def MAIN():		addDir('Search',BASEURL+'/movie/search/',215,art+'search.png',fanart)		addDir('Cinema Movies',BASEURL+'/movie/filter/cinema-movies/all/all/all/all/latest/',209,art+'cinema.png',fanart)		addDir('Featured TV Shows',BASEURL+'/movie/filter/series-featured/all/all/all/all/latest/',213,art+'featured.png',fanart)		addDir('All Movies',BASEURL+'/movie/filter/movie/all/all/all/all/latest/',209,art+'movies.png',fanart)		addDir('All TV Shows',BASEURL+'/movie/filter/series/all/all/all/all/latest/',213,art+'tvshows.png',fanart)		addDir('Genres',BASEURL,216,art+'genres.png',fanart)		addDir('Country',BASEURL,217,art+'country.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')		def GETMOVIES(url):	link = open_url(url)	match=re.compile('<div class="ml-item">[^"]+<a href="(.+?)"[^"]+data-url="[^"]+"[^"]+class="ml-mask jt"[^"]+title="(.+?)">[^"]+<span class="mli-quality">(.+?)</span>[^"]+<img data-original="(.+?)"',re.DOTALL).findall(link)	for url, name, quality, img in match:			try:				name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-').replace('&amp;','&').replace('&#039;','`')				name = name + ": " + '[B][COLOR dodgerblue] Quality: ' + quality + '[/COLOR][/B]' 				url = BASEURL + url + '/watching.html'				img = 'https:' + img				addDir(name,url,211,img,fanart)			except:pass	try:		np=re.compile("<a href='(.+?)' data-page='.+?'>", re.DOTALL | re.IGNORECASE).findall(link)[0]		np = BASEURL + '/movie/filter/movie/all/all/all/all/latest/' + np		name = np		addDir(name,np,209,next,fanart)	except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')def GETTVSHOWS(url):	link = open_url(url)	match=re.compile('<div class="ml-item">[^"]+<a href="(.+?)"[^"]+data-url="[^"]+"[^"]+class="ml-mask jt"[^"]+title="(.+?)">[^"]+ <span class="mli-eps">Eps<i>(.+?)</i></span>[^"]+<img data-original="(.+?)"',re.DOTALL).findall(link)	for url, name, episodes, img in match:			try:				name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-').replace('&amp;','&').replace('&#039;','`')				name = name + ": " + '[B][COLOR dodgerblue] (' + episodes + ' Episodes) [/COLOR][/B]' 				url = BASEURL + url + '/watching.html'				img = 'https:' + img				addDir(name,url,214,img,fanart)			except:pass	'''np=re.compile('<li><a href="(.+?)" .+? rel="next">Next.+?</a></li>', re.DOTALL | re.IGNORECASE).findall(link)[0]	name = np	addDir(name,np,209,next,fanart)'''	xbmc.executebuiltin('Container.SetViewMode(50)')def GETEPISODE(url):	link = open_url(url)	match=re.compile('<a title="(.+?)" player-data="(.+?)"',re.DOTALL).findall(link)	for name, url in match:			try:				if 'seriesonline' in url:					name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-').replace('&amp;','&').replace('&#039;','`')					addDir(name,url,219,iconimage,fanart)			except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')def GENRES(url):	link = open_url(url)	match = re.compile('<li>[^"]+<a href="(.+?)">(.+?)</a>',re.DOTALL).findall(link)	for url, name in match:		if 'genre' in url:			url = BASEURL + url 			addDir(name,url,218,iconimage,fanart)	xbmc.executebuiltin('Container.SetViewMode(50)')	def COUNTRY(url):	link = open_url(url)	match = re.compile('<li>[^"]+<a href="(.+?)">(.+?)</a>',re.DOTALL).findall(link)	for url, name in match:		if 'country' in url:			addDir(name,url,218,iconimage,fanart)	xbmc.executebuiltin('Container.SetViewMode(50)')	def GETSOURCE(name,url):	link = open_url(url)	url = re.compile('player-data="(.+?)"',re.DOTALL).findall(link)	for url in url:		if '123movies' in url:			name = '[COLOR dodgerblue] GoogleVideo [/COLOR]'			addDir(name,url,212,iconimage,fanart)		elif 'seriesonline' in url:			name = '[COLOR dodgerblue] GoogleVideo [/COLOR]'			addDir(name,url,219,iconimage,fanart)		elif 'estream' in url:			name = '[COLOR dodgerblue] EStream [/COLOR]'			addLink(name,url,210,iconimage,fanart)						xbmc.executebuiltin('Container.SetViewMode(50)')	def GETGOOGLE(name,url):	link = open_url(url)	match = re.compile("file: '(.+?)'.+?label: '(.+?)'",re.DOTALL).findall(link)	for url,name in match:		if 'Auto' in name:			pass		else:			name = name.replace('P','p')			name = '[COLOR dodgerblue] Watch in: [/COLOR]' + '[B][COLOR red]' + name + '[/COLOR][/B]'			addLink(name,url,210,iconimage,fanart)				xbmc.executebuiltin('Container.SetViewMode(50)')	def GETGOOGLE2(name,url):	link = open_url(url)	match = re.compile("<source src='(.+?)'.+?label='(.+?)'",re.DOTALL).findall(link)	for url,name in match:		if 'auto' in name:			pass		else:			name = '[COLOR dodgerblue] Watch in: [/COLOR]' + '[B][COLOR red]' + name + 'p[/COLOR][/B]'			addLink(name,url,210,iconimage,fanart)				xbmc.executebuiltin('Container.SetViewMode(50)')	def SEARCH(url):	search_entered = ''	keyboard = xbmc.Keyboard(search_entered, 'Search 123MoviesHD.tv')	keyboard.doModal()	if keyboard.isConfirmed():		search_entered = keyboard.getText().replace(' ','+')	if len(search_entered)>1:		url = url + search_entered		progress = xbmcgui.DialogProgress()		GETSEARCH(url)def GETSEARCH(url):	link = open_url(url)	match=re.compile('<a href="(.+?)"[^"]+data-url="[^"]+"[^"]+class="ml-mask jt"[^"]+title="(.+?)">[^"]+<span class="mli-eps">Eps<i>(.+?)</i></span>[^"]+<img data-original="(.+?)"',re.DOTALL).findall(link)	for url, name, quality, img in match:			try:				if 'Season' in name:					name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-').replace('&amp;','&').replace('&#039;','`')					name = name + ": " + '[B][COLOR dodgerblue] Episodes: ' + quality + '[/COLOR][/B]' 					url = BASEURL + url + '/watching.html'					img = 'https:' + img					addDir(name,url,214,img,fanart)							else:					name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-').replace('&amp;','&').replace('&#039;','`')					name = name + ": " + '[B][COLOR dodgerblue] Quality: ' + quality + '[/COLOR][/B]' 					url = BASEURL + url + '/watching.html'					img = 'https:' + img					addDir(name,url,211,img,fanart)			except:pass	'''np=re.compile('<li><a href="(.+?)" .+? rel="next">Next.+?</a></li>', re.DOTALL | re.IGNORECASE).findall(link)[0]	name = np	addDir(name,np,209,next,fanart)'''	xbmc.executebuiltin('Container.SetViewMode(50)')	def resolve(name,url,iconimage):	progress = xbmcgui.DialogProgress()	progress.create('Stream TVsupertuga', 'Opening Stream For:')	progress.update(10, "", name, "" )	url = urlresolver.resolve(url)	liz=xbmcgui.ListItem(name, iconImage=iconimage,thumbnailImage=iconimage); liz.setInfo( type="Video", infoLabels={ "Title": name } )	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)	xbmc.Player ().play(url, liz, False)