'''   DirectvFree.com | Stream TVsupertuga   Copyright (C) 2017 Mister-X   This program is free software: you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation, either version 3 of the License, or   (at your option) any later version.   This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License   along with this program.  If not, see <http://www.gnu.org/licenses/>.'''import urllib,urllib2,re,xbmcplugin,xbmcgui,urlresolver,sys,xbmc,xbmcaddon,os,urlparse,base64,net,requestsfrom t0mm0.common.addon import Addonfrom metahandler import metahandlersfrom resources.lib import utilsfrom resources.cloudflare import cloudflarenet = net.Net()addon_id = utils.addon_idaddDir = utils.addDiraddLink = utils.addLinkselfAddon = utils.selfAddonaddon = utils.addonfanart = utils.fanarticon = utils.addonnext = utils.nextart = utils.artname = utils.namemode = utils.modeurl = utils.urliconimage = utils.iconimagesite = utils.sitesetView = utils.setViewBASEURL = 'http://www.directvfree.com'datapath= xbmc.translatePath(selfAddon.getAddonInfo('profile'))try:os.mkdir(datapath)except:passfile_var = open(xbmc.translatePath(os.path.join(datapath, 'cookie.lwp')), "a")cookie_file = os.path.join(os.path.join(datapath,''), 'cookie.lwp')def MAIN():		addDir('Search',BASEURL,406,art+'search.png',fanart)		addDir('All TV Shows',BASEURL+'/tvshows/',401,art+'popular.png',fanart)		addDir('Genres',BASEURL+'/tvshows/',404,art+'genres.png',fanart)		addDir('Release Year',BASEURL+'/tvshows/',405,art+'release.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')		def GETTVSHOWS(url):	link = open_url(url)	match=re.compile('div id="mt-.+?".+?<a href="(.+?)">.+?<img src="(.+?)" alt="(.+?)"',re.DOTALL).findall(link)	for url, img, name in match:			try:				name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-')				addDir(name,url,402,img,fanart)			except:pass	try:		np=re.compile("<link rel='next' href='(.+?)'", re.DOTALL | re.IGNORECASE).findall(link)[0]		name = '[COLOR dodgerblue]' + 'Next Page >>' + '[/COLOR]'		addDir(name,np,401,next,fanart)	except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')def GETEPISODE(url):	link = open_url(url)	match=re.compile('<div class="numerando">.+?</div>.+?<a href="(.+?)">(.+?) Season (.+?) Episode (.+?)</a>',re.DOTALL).findall(link)	for url, name, season, episode in match:			try:				name = "Season: " + "[COLOR dodgerblue]" + season + "[/COLOR]" + " " + " " + "Episode: " + "[COLOR dodgerblue]" + episode + "[/COLOR]" 				addDir(name,url,403, iconimage,fanart)			except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')def GETGENRES(url,name):	link = open_url(url)	match=re.compile('<a href="/tvshows-genre/(.+?)">(.+?)</a>',re.DOTALL).findall(link)	for url, name in match:			try:				name = name.replace('#038;','\'')				url = BASEURL + '/' + url 				addDir(name,url,401,iconimage,fanart)			except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')def GETRELEASE(url,name):	link = open_url(url)	match=re.compile('<a href="http://www.directvfree.com/tvshows-release-year(.+?)">(.+?)</a>',re.DOTALL).findall(link)	for url, name in match:			try:				url = BASEURL + url 				addDir(name,url,401,iconimage,fanart)			except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')def SEARCH(url):	search_entered = ''	keyboard = xbmc.Keyboard(search_entered, 'Search Directvfree.com')	keyboard.doModal()	if keyboard.isConfirmed():		search_entered = keyboard.getText().replace(' ','+')	if len(search_entered)>1:		url = url + '/?s=' + search_entered		progress = xbmcgui.DialogProgress()		GETTVSHOWS(url)		def GETSOURCE(name,url):	link = open_url(url)	url = re.compile('<a href="(.+?)" target="_blank">',re.DOTALL).findall(link)	for url in url:		if 'thevideo' in url:			addLink('[B][COLOR dodgerblue]TheVideo:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'youwatch' in url:			addLink('[B][COLOR dodgerblue]YouWatch:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'watchers' in url:			addLink('[B][COLOR dodgerblue]Watchers:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)			elif 'openload' in url:			addLink('[B][COLOR dodgerblue]OpenLoad:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)					elif 'nowvideo' in url:			addLink('[B][COLOR dodgerblue]NowVideo:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'auroravid' in url:			addLink('[B][COLOR dodgerblue]AuroraVid:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'sharesix' in url:			addLink('[B][COLOR dodgerblue]ShareSix:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'vidup' in url:			addLink('[B][COLOR dodgerblue]ViDup:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'playedto' in url:			addLink('[B][COLOR dodgerblue]PlayedTo:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'speedvid' in url:			addLink('[B][COLOR dodgerblue]SpeedVid:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'powvideo' in url:			addLink('[B][COLOR dodgerblue]PowVideo:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)		elif 'youwatch' in url:			addLink('[B][COLOR dodgerblue]YouWatch:[/COLOR][COLOR red] Full Version[/COLOR][/B]',url,450,iconimage,fanart)	xbmc.executebuiltin('Container.SetViewMode(50)')		def resolve(name,url,iconimage):	progress = xbmcgui.DialogProgress()	progress.create('Stream TVsupertuga', 'Opening Stream:')	progress.update(10, "", name, "" )	try: 		url = urlresolver.resolve(url)		liz=xbmcgui.ListItem(name, iconImage=iconimage,thumbnailImage=iconimage); liz.setInfo( type="Video", infoLabels={ "Title": name } )		ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)		liz.setProperty('IsPlayable','true')		xbmc.Player ().play(url, liz, False)	except:pass	xbmcplugin.endOfDirectory(int(sys.argv[1]))def open_url(url):        try:                net.set_cookies(cookie_file)                link = net.http_GET(url).content                link = cleanHex(link)                return link        except:                from resources.cloudflare import cloudflare                cloudflare.createCookie(url,cookie_file,'Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0')                net.set_cookies(cookie_file)                link = net.http_GET(url).content                link = cleanHex(link)                return link	def cleanHex(text):    def fixup(m):        text = m.group(0)        if text[:3] == "&#x": return unichr(int(text[3:-1], 16)).encode('utf-8')        else: return unichr(int(text[2:-1])).encode('utf-8')    try :return re.sub("(?i)&#\w+;", fixup, text.decode('ISO-8859-1').encode('utf-8'))    except:return re.sub("(?i)&#\w+;", fixup, text.encode("ascii", "ignore").encode('utf-8'))				