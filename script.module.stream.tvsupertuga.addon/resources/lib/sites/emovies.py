'''   eMovies.IS | Stream TVsupertuga   Copyright (C) 2017 Mister-X   This program is free software: you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation, either version 3 of the License, or   (at your option) any later version.   This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License   along with this program.  If not, see <http://www.gnu.org/licenses/>.'''import urllib,urllib2,re,xbmcplugin,xbmcgui,urlresolver,sys,xbmc,xbmcaddon,os,urlparse,base64from t0mm0.common.addon import Addonfrom metahandler import metahandlersfrom resources.lib import utilsaddon_id = utils.addon_idaddDir = utils.addDiraddLink = utils.addLinkselfAddon = utils.selfAddonaddon = utils.addonfanart = utils.fanarticon = utils.addonnext = utils.nextart = utils.artname = utils.namemode = utils.modeurl = utils.urliconimage = utils.iconimagesite = utils.sitesetView = utils.setViewopen_url = utils.open_urlBASEURL = 'http://emovies.is'def MAIN():		addDir('Search',BASEURL,464,art+'search.png',fanart)		addDir('Movies','http://ignorme',462,art+'movies.png',fanart)		addDir('TV Shows','http://ignorme',463,art+'tvshows.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')def MOVIES():		addDir('Cinema Movies',BASEURL+'/category/cinema-movies/',461,art+'cinema.png',fanart)		addDir('Recently Added',BASEURL+'/category/movies/?filtre=date',461,art+'recently.png',fanart)		addDir('Popular Movies',BASEURL+'/category/movies/?display=tube&filtre=views',461,art+'popular.png',fanart)		addDir('Longest Movies',BASEURL+'/category/movies/?display=tube&filtre=duree',461,art+'longest.png',fanart)		addDir('Best Ratings',BASEURL+'/category/movies/?display=tube&filtre=rate',461,art+'best.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')def TVSHOWS():		addDir('All TV Shows',BASEURL+'/category/tv-series/',461,art+'tvshows.png',fanart)		addDir('Recently Added',BASEURL+'/category/tv-series/?display=tube&filtre=date',461,art+'recently.png',fanart)		addDir('Popular Movies',BASEURL+'/category/tv-series/?display=tube&filtre=views',461,art+'popular.png',fanart)		addDir('Longest Movies',BASEURL+'/category/tv-series/?display=tube&filtre=duree',461,art+'longest.png',fanart)		addDir('Best Ratings',BASEURL+'/category/tv-series/?display=tube&filtre=rate',461,art+'best.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')		def GETMOVIES(url):	link = open_url(url)	match=re.compile('<li class="border-radius-5 box-shadow">[^"]+<img src="(.+?)" alt="(.+?)" title=".*?"[^"]+href="(.+?)"',re.DOTALL).findall(link)	for img, name, url in match:			try:				name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-')				addLink(name,url,480,img,fanart)			except:pass	try:		np=re.compile('<li><a href="(.*?)">Next.*?</a></li>', re.DOTALL | re.IGNORECASE).findall(link)[0]		name = '[COLOR dodgerblue]' + 'Next Page >>' + '[/COLOR]'		addDir(name,np,461,next,fanart)	except:pass	xbmc.executebuiltin('Container.SetViewMode(50)')	def SEARCH(url):	search_entered = ''	keyboard = xbmc.Keyboard(search_entered, 'Search eMovies.is')	keyboard.doModal()	if keyboard.isConfirmed():		search_entered = keyboard.getText().replace(' ','+')	if len(search_entered)>1:		url = url + '/?s=' + search_entered		progress = xbmcgui.DialogProgress()		GETMOVIES(url)			def resolve(name,url,iconimage):	progress = xbmcgui.DialogProgress()	progress.create('Stream TVsupertuga', 'Opening Stream For:')	progress.update(10, "", name, "" )        link = open_url(url)        stream_url=re.compile('<iframe src="(.+?)"').findall(link)        try:            for url in stream_url:                        url = urlresolver.resolve(url)                        liz=xbmcgui.ListItem(name, iconImage=iconimage,thumbnailImage=iconimage); liz.setInfo( type="Video", infoLabels={ "Title": name } )                        ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)                        xbmc.Player ().play(url, liz, False)        except:pass