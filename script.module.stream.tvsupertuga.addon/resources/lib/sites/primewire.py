'''   PrimeWire.ag | Stream TVsupertuga   Copyright (C) 2017 Mister-X   This program is free software: you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation, either version 3 of the License, or   (at your option) any later version.   This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License   along with this program.  If not, see <http://www.gnu.org/licenses/>.'''import urllib,urllib2,re,xbmcplugin,xbmcgui,urlresolver,sys,xbmc,xbmcaddon,os,urlparse,base64from t0mm0.common.addon import Addonfrom metahandler import metahandlersfrom resources.lib import utilsaddon_id = utils.addon_idaddDir = utils.addDiraddLink = utils.addLinkselfAddon = utils.selfAddonaddon = utils.addonfanart = utils.fanarticon = utils.addonnext = utils.nextart = utils.artname = utils.namemode = utils.modeurl = utils.urliconimage = utils.iconimagesite = utils.sitesetView = utils.setViewopen_url = utils.open_urlBASEURL = selfAddon.getSetting('BASEURLprimewire')def MAIN():		addDir('Movies','http://ignorme',225,art+'movies.png',fanart)		addDir('TV Shows','http://ignorme',226,art+'tvshows.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')def MOVIES():		addDir('New Movies',BASEURL+'/?sort=release',222,art+'newest.png',fanart)		addDir('Featured Movies',BASEURL+'/?sort=featured',222,art+'featured.png',fanart)		addDir('Popular',BASEURL+'/?sort=views',222,art+'popular.png',fanart)		addDir('Most Viewed',BASEURL+'/?sort=favorites',222,art+'most.png',fanart)		addDir('All Movies',BASEURL,222,art+'movies.png',fanart)		addDir('Best Ratings',BASEURL+'/?sort=ratings',222,art+'best.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')def TVSHOWS():		addDir('New TV Shows',BASEURL+'/?tv=&sort=release',227,art+'newest.png',fanart)		addDir('Featured TV Shows',BASEURL+'/?tv=&sort=featured',227,art+'featured.png',fanart)		addDir('Popular',BASEURL+'/?tv=&sort=views',227,art+'popular.png',fanart)		addDir('Most Viewed',BASEURL+'/?tv=&sort=favorites',227,art+'most.png',fanart)		addDir('All TV Shows',BASEURL+'/?tv',227,art+'movies.png',fanart)		addDir('Best Ratings',BASEURL+'/?tv=&sort=ratings',227,art+'best.png',fanart)		xbmc.executebuiltin('Container.SetViewMode(50)')		def GETMOVIES(url):	link = open_url(url)	match=re.compile('<div class="index_item index_item_ie"><a href="(.+?)" title="Watch (.+?)"><img src="(.+?)"',re.DOTALL).findall(link)	for url, name, img in match:			try:				name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-')				url = BASEURL + url				img = "http:" + img				addDir(name,url,223,img,fanart)			except:pass	np=re.compile('<a href=".+?page=([^"]+)">', re.DOTALL ).findall(link)	for np in np:		try:			url = BASEURL + '/?page=' + np			name = '[COLOR dodgerblue]' + 'Page ' + np + ' >> [/COLOR]'			addDir(name,url,222,next,fanart)		except:pass				xbmc.executebuiltin('Container.SetViewMode(50)')def GETTVSHOWS(url):	link = open_url(url)	match=re.compile('<div class="index_item index_item_ie"><a href="(.+?)" title="Watch (.+?)"><img src="(.+?)"',re.DOTALL).findall(link)	for url, name, img in match:			try:				name = name.replace('&#8217;','\'').replace('#038;','').replace('\\xc3\\xa9','e').replace('&#8211;','-')				url = BASEURL + url				img = "http:" + img				addDir(name,url,228,img,fanart)			except:pass	np=re.compile('<a href=".+?page=([^"]+)">', re.DOTALL ).findall(link)	for np in np:		try:			url = BASEURL + '/?page=' + np			name = '[COLOR dodgerblue]' + 'Page ' + np + ' >> [/COLOR]'			addDir(name,url,222,next,fanart)		except:pass			xbmc.executebuiltin('Container.SetViewMode(50)')def GETSEASONS(url):	link = open_url(url)	match=re.compile('<a .+? class="season-toggle" href="(.*?)">([^"]+).+?',re.DOTALL).findall(link)	for url, name in match:			try:				name = name.replace('<span style=','').replace('&#9658;','')				url = BASEURL + url				addDir(name,url,229,iconimage,fanart)			except:pass		xbmc.executebuiltin('Container.SetViewMode(50)')def GETEPISODE(url):	metaset = selfAddon.getSetting('enable_meta')	link = open_url(url)	match=re.compile('<a href="([^"]+)">([^"]+)<span class="tv_episode_name">([^"]+)</span>\n<span class="tv_episode_airdate">([^"]+)</span>',re.DOTALL).findall(link)	for url, episode, name, date in match:			try:				name = name.replace('<span style=','').replace('&#9658;','')				url = BASEURL + url				name = episode + name + "[COLOR dodgerblue]" + date + "[/COLOR]"				addDir(name,url,223,iconimage,fanart)			except:pass		xbmc.executebuiltin('Container.SetViewMode(50)')	def GETSOURCE(name,url):	link = open_url(url)	match = re.compile('<a href=".+?&url=([^"]+)&domain=.+?" .+? rel="nofollow" title="Watch Version.+?" target="_blank">(.+?)</a>',re.DOTALL).findall(link)	for url, name in match:			url = base64.b64decode(url)			name = url			if 'openload' in url:				url = url.replace('https://openload.co/f/','https://openload.co/embed/')				name = "[B][COLOR dodgerblue] OpenLoad.co [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'vidtodo' in url:				name = "[B][COLOR dodgerblue] VidTodo.com [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'thevideo' in url:				name = "[B][COLOR dodgerblue] TheVideo.me [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'vidzi' in url:				name = "[B][COLOR dodgerblue] VidZi.tv [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'estream' in url:				name = "[B][COLOR dodgerblue] EStream.to [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)				elif 'vidup' in url:				name = "[B][COLOR dodgerblue] ViDup.me [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'vidto' in url:				name = "[B][COLOR dodgerblue] Vidto.me [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'streamin' in url:				name = "[B][COLOR dodgerblue] Streamin.to [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)				elif 'speedvid' in url:				name = "[B][COLOR dodgerblue] Speedvid.net [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)			elif 'vshare' in url:				name = "[B][COLOR dodgerblue] VShare.eu [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)				elif 'vidlox' in url:				name = "[B][COLOR dodgerblue] Vidlox.tv [/COLOR][/B]"				addLink(name,url,224,iconimage,fanart)						xbmc.executebuiltin('Container.SetViewMode(50)')	def SEARCH(url):	search_entered = ''	keyboard = xbmc.Keyboard(search_entered, 'Search PrimeWire.ag')	keyboard.doModal()	if keyboard.isConfirmed():		search_entered = keyboard.getText().replace(' ','+')	if len(search_entered)>1:		url = url + '/index.php?search_keywords=' + search_entered		progress = xbmcgui.DialogProgress()		GETMOVIES(url)	def resolve(name,url,iconimage):	progress = xbmcgui.DialogProgress()	progress.create('Stream TVsupertuga', 'Opening Stream For:')	progress.update(10, "", name, "" )	url = urlresolver.resolve(url)	liz=xbmcgui.ListItem(name, iconImage=iconimage,thumbnailImage=iconimage); liz.setInfo( type="Video", infoLabels={ "Title": name } )	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)	xbmc.Player ().play(url, liz, False)