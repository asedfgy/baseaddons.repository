

import base64, codecs
magic = 'IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMgICAgICBDb3B5cmlnaHQgKEMpIDIwMTUgU3VyZmFjaW5neCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgVGhpcyBQcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgICAgICAgICMNCiMgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5ICAgICAgICAjDQojICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLCBvciAoYXQgeW91ciBvcHRpb24pICAgICAgICAgIw0KIyAgYW55IGxhdGVyIHZlcnNpb24uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICBUaGlzIFByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgICAgICAgICAgICAgIw0KIyAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgICAgICAgICAgICAgICMNCiMgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSAgICAgICAgICAgICAgICAjDQojICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlICAgICAgICAgICAjDQojICBhbG9uZyB3aXRoIFhCTUM7IHNlZSB0aGUgZmlsZSBDT1BZSU5HLiAgSWYgbm90LCB3cml0ZSB0byAgICAgICAgICAgICAgICAgICAgIw0KIyAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgNjc1IE1hc3MgQXZlLCBDYW1icmlkZ2UsIE1BIDAyMTM5LCBVU0EuICAgICAgICMNCiMgIGh0dHA6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQppbXBvcnQgeGJtYywgeGJtY2FkZG9uLCB4Ym1jZ3VpLCB4Ym1jcGx1Z2luLCBvcywgc3lzLCB4Ym1jdmZzLCBIVE1MUGFyc2VyLCBnbG9iLCB6aXBmaWxlLCBqc29uLCBiYXNlNjQNCmltcG9ydCBzaHV0aWwNCmltcG9ydCBlcnJubw0KaW1wb3J0IHN0cmluZw0KaW1wb3J0IHJhbmRvbQ0KaW1wb3J0IHVybGxpYjIsdXJsbGliDQppbXBvcnQgcmUNCmltcG9ydCBkb3dubG9hZGVyDQppbXBvcnQgZXh0cmFjdA0KaW1wb3J0IHVzZXJ2YXINCmltcG9ydCBza2luU3dpdGNoDQppbXBvcnQgdGltZQ0KaW1wb3J0IHB5cXJjb2RlDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRlLCBkYXRldGltZSwgdGltZWRlbHRhDQp0cnk6ICAgIGZyb20gc3FsaXRlMyBpbXBvcnQgZGJhcGkyIGFzIGRhdGFiYXNlDQpleGNlcHQ6IGZyb20gcHlzcWxpdGUyIGltcG9ydCBkYmFwaTIgYXMgZGF0YWJhc2UNCmZyb20gc3RyaW5nIGltcG9ydCBkaWdpdHMNCg0KQURET05fSUQgICAgICAgPSB1c2VydmFyLkFERE9OX0lEDQpBRERPTlRJVExFICAgICA9IHVzZXJ2YXIuQURET05USVRMRQ0KQURET04gICAgICAgICAgPSB4Ym1jYWRkb24uQWRkb24oQURET05fSUQpDQpWRVJTSU9OICAgICAgICA9IEFERE9OLmdldEFkZG9uSW5mbygndmVyc2lvbicpDQpVU0VSX0FHRU5UICAgICA9ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8zNS4wLjE5MTYuMTUzIFNhZmFyaS81MzcuMzYgU0UgMi5YIE1ldGFTciAxLjAnDQpESUFMT0cgICAgICAgICA9IHhibWNndWkuRGlhbG9nKCkNCkRQICAgICAgICAgICAgID0geGJtY2d1aS5EaWFsb2dQcm9ncmVzcygpDQpIT01FICAgICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL2hvbWUvJykNClhCTUMgICAgICAgICAgID0geGJtYy50cmFuc2xhdGVQYXRoKCdzcGVjaWFsOi8veGJtYy8nKQ0KTE9HICAgICAgICAgICAgPSB4Ym1jLnRyYW5zbGF0ZVBhdGgoJ3NwZWNpYWw6Ly9sb2dwYXRoLycpDQpQUk9GSUxFICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL3Byb2ZpbGUvJykNClNPVVJDRSAgICAgICAgID0geGJtYy50cmFuc2xhdGVQYXRoKCdzb3VyY2U6Ly8nKQ0KQURET05TICAgICAgICAgPSBvcy5wYXRoLmpvaW4oSE9NRSwgICAgICAnYWRkb25zJykNClVTRVJEQVRBICAgICAgID0gb3MucGF0aC5qb2luKEhPTUUsICAgICAgJ3VzZXJkYXRhJykNClBMVUdJTiAgICAgICAgID0gb3MucGF0aC5qb2luKEFERE9OUywgICAgQURET05fSUQpDQpQQUNLQUdFUyAgICAgICA9IG9zLnBhdGguam9pbihBRERPTlMsICAgICdwYWNrYWdlcycpDQpBRERPTkQgICAgICAgICA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgICdhZGRvbl9kYXRhJykNCkFERE9OREFUQSAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2FkZG9uX2RhdGEnLCBBRERPTl9JRCkNCkFEVkFOQ0VEICAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2FkdmFuY2Vkc2V0dGluZ3MueG1sJykNClNPVVJDRVMgICAgICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ3NvdXJjZXMueG1sJykNCkdVSVNFVFRJTkdTICAgID0gb3MucGF0aC5qb2luKFVTRVJEQVRBLCAgJ2d1aXNldHRpbmdzLnhtbCcpDQpGQVZPVVJJVEVTICAgICA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgICdmYXZvdXJpdGVzLnhtbCcpDQpQUk9GSUxFUyAgICAgICA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgICdwcm9maWxlcy54bWwnKQ0KVEhVTUJTICAgICAgICAgPSBvcy5wYXRoLmpvaW4oVVNFUkRBVEEsICAnVGh1bWJuYWlscycpDQpEQVRBQkFTRSAgICAgICA9IG9zLnBhdGguam9pbihVU0VSREFUQSwgICdEYXRhYmFzZScpDQpGQU5BUlQgICAgICAgICA9IG9zLnBhdGguam9pbihQTFVHSU4sICAgICdmYW5hcnQuanBnJykNCklDT04gICAgICAgICAgID0gb3MucGF0aC5qb2luKFBMVUdJTiwgICAgJ2ljb24ucG5nJykNCkFSVCAgICAgICAgICAgID0gb3MucGF0aC5qb2luKFBMVUdJTiwgICAgJ3Jlc291cmNlcycsICdhcnQnKQ0KV0laTE9HICAgICAgICAgPSBvcy5wYXRoLmpvaW4oQURET05EQVRBLCAnd2l6YXJkLmxvZycpDQpXSElURUxJU1QgICAgICA9IG9zLnBhdGguam9pbihBRERPTkRBVEEsICd3aGl0ZWxpc3QudHh0JykNClFSQ09ERVMgICAgICAgID0gb3MucGF0aC5qb2luKEFERE9OREFUQSwgJ1FSQ29kZXMnKQ0KU0tJTiAgICAgICAgICAgPSB4Ym1jLmdldFNraW5EaXIoKQ0KVE9EQVkgICAgICAgICAgPSBkYXRlLnRvZGF5KCkNClRPTU9SUk9XICAgICAgID0gVE9EQVkgKyB0aW1lZGVsdGEoZGF5cz0xKQ0KVFdPREFZUyAgICAgICAgPSBUT0RBWSArIHRpbWVkZWx0YShkYXlzPTIpDQpUSFJFRURBWVMgICAgICA9IFRPREFZICsgdGltZWRlbHRhKGRheXM9MykNCk9ORVdFRUsgICAgICAgID0gVE9EQVkgKyB0aW1lZGVsdGEoZGF5cz03KQ0KS09ESVYgICAgICAgICAgPSBmbG9hdCh4Ym1jLmdldEluZm9MYWJlbCgiU3lzdGVtLkJ1aWxkVmVyc2lvbiIpWzo0XSkNCkVYQ0xVREVTICAgICAgID0gdXNlcnZhci5FWENMVURFUw0KQlVJTERGSUxFICAgICAgPSB1c2VydmFyLkJVSUxERklMRQ0KQVBLRklMRSAgICAgICAgPSB1c2VydmFyLkFQS0ZJTEUNCllPVVRVQkVGSUxFICAgID0gdXNlcnZhci5ZT1VUVUJFRklMRQ0KQURET05GSUxFICAgICAgPSB1c2VydmFyLkFERE9ORklMRQ0KQURWQU5DRURGSUxFICAgPSB1c2VydmFyLkFEVkFOQ0VERklMRQ0KQVVUT1VQREFURSAgICAgPSB1c2VydmFyLkFVVE9VUERBVEUNCldJWkFSREZJTEUgICAgID0gdXNlcnZhci5XSVpBUkRGSUxFDQpOT1RJRklDQVRJT04gICA9IHVzZXJ2YXIuTk9USUZJQ0FUSU9ODQpFTkFCTEUgICAgICAgICA9IHVzZXJ2YXIuRU5BQkxFDQpBVVRPSU5TVEFMTCAgICA9IHVzZXJ2YXIuQVVUT0lOU1RBTEwNClJFUE9BRERPTlhNTCAgID0gdXNlcnZhci5SRVBPQURET05YTUwNClJFUE9aSVBVUkwgICAgID0gdXNlcnZhci5SRVBPWklQVVJMDQpDT05UQUNUICAgICAgICA9IHVzZXJ2YXIuQ09OVEFDVA0KQ09MT1IxICAgICAgICAgPSB1c2VydmFyLkNPTE9SMQ0KQ09MT1IyICAgICAgICAgPSB1c2VydmFyLkNPTE9SMg0KSU5DTFVERVZJREVPICAgPSBBRERPTi5nZXRTZXR0aW5nKCdpbmNsdWRldmlkZW8nKQ0KSU5DTFVERUFMTCAgICAgPSBBRERPTi5nZXRTZXR0aW5nKCdpbmNsdWRlYWxsJykNCklOQ0xVREVCT0IgICAgID0gQURET04uZ2V0U2V0dGluZygnaW5jbHVkZWJvYicpDQpJTkNMVURFUEhPRU5JWCA9IEFERE9OLmdldFNldHRpbmcoJ2luY2x1ZGVwaG9lbml4JykNCklOQ0xVREVTUEVDVE8gID0gQURET04uZ2V0U2V0dGluZygnaW5jbHVkZXNwZWN0bycpDQpJTkNMVURFR0VORVNJUyA9IEFERE9OLmdldFNldHRpbmcoJ2luY2x1ZGVnZW5lc2lzJykNCklOQ0xVREVFWE9EVVMgID0gQURET04uZ2V0U2V0dGluZygnaW5jbHVkZWV4b2R1cycpDQpJTkNMVURFT05FQ0hBTiA9IEFERE9OLmdldFNldHRpbmcoJ2luY2x1ZGVvbmVjaGFuJykNCklOQ0xVREVTQUxUUyAgID0gQURET04uZ2V0U2V0dGluZygnaW5jbHVkZXNhbHRzJykNCklOQ0xVREVTQUxUU0hEID0gQURET04uZ2V0U2V0dGluZygnaW5jbHVkZXNhbHRzbGl0ZScpDQpTSE9XQURVTFQgICAgICA9IEFERE9OLmdldFNldHRpbmcoJ2FkdWx0JykNCldJWkRFQlVHR0lORyAgID0gQURET04uZ2V0U2V0dGluZygnYWRkb25fZGVidWcnKQ0KREVCVUdMRVZFTCAgICAgPSBBRERPTi5nZXRTZXR0aW5nKCdkZWJ1Z2xldmVsJykNCkVOQUJMRVdJWkxPRyAgID0gQURET04uZ2V0U2V0dGluZygnd2l6YXJkbG9nJykNCkNMRUFOV0laTE9HICAgID0gQURET04uZ2V0U2V0dGluZygnYXV0b2NsZWFud2l6JykNCkNMRUFOV0laTE9HQlkgID0gQURET04uZ2V0U2V0dGluZygnd2l6bG9nY2xlYW5ieScpDQpDTEVBTkRBWVMgICAgICA9IEFERE9OLmdldFNldHRpbmcoJ3dpemxvZ2NsZWFuZGF5cycpDQpDTEVBTlNJWkUgICAgICA9IEFERE9OLmdldFNldHRpbmcoJ3dpemxvZ2NsZWFuc2l6ZScpDQpDTEVBTkxJTkVTICAgICA9IEFERE9OLmdldFNldHRpbmcoJ3dpemxvZ2NsZWFubGluZXMnKQ0KSU5TVEFMTE1FVEhPRCAgPSBBRERPTi5nZXRTZXR0aW5nKCdpbnN0YWxsbWV0aG9kJykNCkRFVkVMT1BFUiAgICAgID0gQURET04uZ2V0U2V0dGluZygnZGV2ZWxvcGVyJykNClRISVJEUEFSVFkgICAgID0gQURET04uZ2V0U2V0dGluZygnZW5hYmxlM3JkJykNClRISVJEMU5BTUUgICAgID0gQURET04uZ2V0U2V0dGluZygnd2l6YXJkMW5hbWUnKQ0KVEhJUkQxVVJMICAgICAgPSBBRERPTi5nZXRTZXR0aW5nKCd3aXphcmQxdXJsJykNClRISVJEMk5BTUUgICAgID0gQURET04uZ2V0U2V0dGluZygnd2l6YXJkMm5hbWUnKQ0KVEhJUkQyVVJMICAgICAgPSBBRERPTi5nZXRTZXR0aW5nKCd3aXphcmQydXJsJykNClRISVJEM05BTUUgICAgID0gQURET04uZ2V0U2V0dGluZygnd2l6YXJkM25hbWUnKQ0KVEhJUkQzVVJMICAgICAgPSBBRERPTi5nZXRTZXR0aW5nKCd3aXphcmQzdXJsJykNCkJBQ0tVUExPQ0FUSU9OID0gQURET04uZ2V0U2V0dGluZygncGF0aCcpIGlmIG5vdCBBRERPTi5nZXRTZXR0aW5nKCdwYXRoJykgPT0gJycgZWxzZSAnc3BlY2lhbDovL2hvbWUvJw0KTVlCVUlMRFMgICAgICAgPSBvcy5wYXRoLmpvaW4oQkFDS1VQTE9DQVRJT04sICdNeV9CdWlsZHMnLCAnJykNCkxPR0ZJTEVTICAgICAgID0gWydsb2cnLCAneGJtYy5vbGQubG9nJywgJ2tvZGkubG9nJywgJ2tvZGkub2xkLmxvZycsICdzcG1jLmxvZycsICdzcG1jLm9sZC5sb2cnLCAndHZtYy5sb2cnLCAndHZtYy5vbGQubG9nJ10NCkRFRkFVTFRQTFVHSU5TID0gWydtZXRhZGF0YS5hbGJ1bS51bml2ZXJzYWwnLCAnbWV0YWRhdGEuYXJ0aXN0cy51bml2ZXJzYWwnLCAnbWV0YWRhdGEuY29tbW9uLmZhbmFydC50dicsICdtZXRhZGF0YS5jb21tb24uaW1kYi5jb20nLCAnbWV0YWRhdGEuY29tbW9uLm11c2ljYnJhaW56Lm9yZycsICdtZXRhZGF0YS50aGVtb3ZpZWRiLm9yZycsICdtZXRhZGF0YS50dmRiLmNvbScsICdzZXJ2aWNlLnhibWMudmVyc2lvbmNoZWNrJ10NCk1BWFdJWlNJWkUgICAgID0gWzEwMCwgMjAwLCAzMDAsIDQwMCwgNTAwLCAxMDAwXQ0KTUFYV0laTElORVMgICAgPSBbMTAwLCAyMDAsIDMwMCwgNDAwLCA1MDBdDQpNQVhXSVpEQVRFUyAgICA9IFsxLCAyLCAzLCA3XQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjIyMjIFNldHRpbmdzIEl0ZW1zICMjIyMjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KZGVmIGdldFMobmFtZSk6DQoJdHJ5OiByZXR1cm4gQURET04uZ2V0U2V0dGluZyhuYW1lKQ0KCWV4Y2VwdDogcmV0dXJuIEZhbHNlDQoNCmRlZiBzZXRTKG5hbWUsIHZhbHVlKToNCgl0cnk6IEFERE9OLnNldFNldHRpbmcobmFtZSwgdmFsdWUpDQoJZXhjZXB0OiByZXR1cm4gRmFsc2UNCg0KZGVmIG9wZW5TKG5hbWU9IiIpOg0KCUFERE9OLm9wZW5TZXR0aW5ncygpDQoNCmRlZiBjbGVhclModHlwZSk6DQoJYnVpbGQgICAgPSB7J2J1aWxkbmFtZSc6JycsICdidWlsZGNvdW50ZXInOicnLCAnYnVpbGR2ZXJzaW9uJzonJywgJ2J1aWxkdGhlbWUnOicnLCAnbGF0ZXN0dmVyc2lvbic6JycsICdsYXN0YnVpbGRjaGVjayc6JzIwMTYtMDEtMDEnfQ0KCWluc3RhbGwgID0geydpbnN0YWxsZWQnOidmYWxzZScsICdleHRyYWN0JzonJywgJ2Vycm9ycyc6Jyd9DQoJZGVmYXVsdCAgPSB7J2RlZmF1bHRza2luaWdub3JlJzonZmFsc2UnLCAnZGVmYXVsdHNraW4nOicnLCAnZGVmYXVsdHNraW5uYW1lJzonJ30NCglsb29rZmVlbCA9IFsnZGVmYXVsdC5lbmFibGVyc3NmZWVkcycsICdkZWZhdWx0LmZvbnQnLCAnZGVmYXVsdC5yc3NlZGl0JywgJ2RlZmF1bHQuc2tpbmNvbG9ycycsICdkZWZhdWx0LnNraW50aGVtZScsICdkZWZhdWx0LnNraW56b29tJywgJ2RlZmF1bHQuc291bmRza2luJywgJ2RlZmF1bHQuc3RhcnR1cHdpbmRvdycsICdkZWZhdWx0LnN0ZXJlb3N0cmVuZ3RoJ10NCglpZiB0eXBlID09ICdidWlsZCc6DQoJCWZvciBzZXQgaW4gYnVpbGQ6DQoJCQlzZXRTKHNldCwgYnVpbGRbc2V0XSkNCgkJZm9yIHNldCBpbiBpbnN0YWxsOg0KCQkJc2V0UyhzZXQsIGluc3RhbGxbc2V0XSkNCgkJZm9yIHNldCBpbiBkZWZhdWx0Og0KCQkJc2V0UyhzZXQsIGRlZmF1bHRbc2V0XSkNCgkJZm9yIHNldCBpbiBsb29rZmVlbDoNCgkJCXNldFMoc2V0LCAnJykNCgllbGlmIHR5cGUgPT0gJ2RlZmF1bHQnOg0KCQlmb3Igc2V0IGluIGRlZmF1bHQ6DQoJCQlzZXRTKHNldCwgZGVmYXVsdFtzZXRdKQ0KCQlmb3Igc2V0IGluIGxvb2tmZWVsOg0KCQkJc2V0UyhzZXQsICcnKQ0KCWVsaWYgdHlwZSA9PSAnaW5zdGFsbCc6DQoJCWZvciBzZXQgaW4gaW5zdGFsbDoNCgkJCXNldFMoc2V0LCBpbnN0YWxsW3NldF0pDQoJZWxpZiB0eXBlID09ICdsb29rZmVlbCc6DQoJCWZvciBzZXQgaW4gbG9va2ZlZWw6DQoJCQlzZXRTKHNldCwgJycpDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjIyMjIERpc3BsYXkgSXRlbXMgIyMjIyMjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KIyBkZWYgVGV4dEJveGVzKGhlYWRpbmcsYW5ub3VuY2UpOg0KCSMgY2xhc3MgVGV4dEJveCgpOg0KCQkjIFdJTkRPVz0xMDE0Nw0KCQkjIENPTlRST0xfTEFCRUw9MQ0KCQkjIENPTlRST0xfVEVYVEJPWD01DQoJCSMgZGVmIF9faW5pdF9fKHNlbGYsKmFyZ3MsKiprd2FyZ3MpOg0KCQkJIyBlYmkoIkFjdGl2YXRlV2luZG93KCVkKSIgJSAoc2VsZi5XSU5ET1csICkpICMgYWN0aXZhdGUgdGhlIHRleHQgdmlld2VyIHdpbmRvdw0KCQkJIyBzZWxmLndpbj14Ym1jZ3VpLldpbmRvdyhzZWxmLldJTkRPVykgIyBnZXQgd2luZG93DQoJCQkjIHhibWMuc2xlZXAoNTAwKSAjIGdpdmUgd2luZG93IHRpbWUgdG8gaW5pdGlhbGl6ZQ0KCQkJIyBzZWxmLnNldENvbnRyb2xzKCkNCgkJIyBkZWYgc2V0Q29udHJvbHMoc2VsZik6DQoJCQkjIHNlbGYud2luLmdldENvbnRyb2woc2VsZi5DT05UUk9MX0xBQkVMKS5zZXRMYWJlbChoZWFkaW5nKSAjIHNldCBoZWFkaW5nDQoJCQkjIHRyeTogZj1vcGVuKGFubm91bmNlKTsgdGV4dD1mLnJlYWQoKQ0KCQkJIyBleGNlcHQ6IHRleHQ9YW5ub3VuY2UNCgkJCSMgc2VsZi53aW4uZ2V0Q29udHJvbChzZWxmLkNPTlRST0xfVEVYVEJPWCkuc2V0VGV4dChzdHIodGV4dCkpDQoJCQkjIHJldHVybg0KCSMgVGV4dEJveCgpDQoJIyB3aGlsZSB4Ym1jLmdldENvbmRWaXNpYmlsaXR5KCdXaW5kb3cuSXNWaXNpYmxlKDEwMTQ3KScpOg0KCQkjIHhibWMuc2xlZXAoNTAwKQ0KDQoNCkFDVElPTl9QUkVWSU9VU19NRU5VIAkJCT0gIDEwCSMjIEVTQyBhY3Rpb24NCkFDVElPTl9OQVZfQkFDSyAJCQkJPSAgOTIJIyMgQmFja3NwYWNlIGFjdGlvbg0KQUNUSU9OX01PVkVfTEVGVAkJCQk9ICAgMQkjIyBMZWZ0IGFycm93IGtleQ0KQUNUSU9OX01PVkVfUklHSFQgCQkJCT0gICAyCSMjIFJpZ2h0IGFycm93IGtleQ0KQUNUSU9OX01PVkVfVVAgCQkJCQk9ICAgMwkjIyBVcCBhcnJvdyBrZXkNCkFDVElPTl9NT1ZFX0RPV04gCQkJCT0gICA0CSMjIERvd24gYXJyb3cga2V5DQpBQ1RJT05fTU9VU0VfV0hFRUxfVVAgCQkJPSAxMDQJIyMgTW91c2Ugd2hlZWwgdXANCkFDVElPTl9NT1VTRV9XSEVFTF9ET1dOCQkJPSAxMDUJIyMgTW91c2Ugd2hlZWwgZG93bg0KQUNUSU9OX01PVkVfTU9VU0UgCQkJCT0gMTA3CSMjIERvd24gYXJyb3cga2V5DQpBQ1RJT05fU0VMRUNUX0lURU0JCQkJPSAgIDcJIyMgTnVtYmVyIFBhZCBFbnRlcg0KQUNUSU9OX0JBQ0tTUEFDRQkJCQk9IDExMAkjIyA/DQpBQ1RJT05fTU9VU0VfTEVGVF9DTElDSyAJCT0gMTAwDQpBQ1RJT05fTU9VU0VfTE9OR19DTElDSyAJCT0gMTA4DQpkZWYgVGV4dEJveCh0aXRsZSwgbXNnKToNCgljbGFzcyBUZXh0Qm94ZXMoeGJtY2d1aS5XaW5kb3dYTUxEaWFsb2cpOg0KCQlkZWYgb25Jbml0KHNlbGYpOg0KCQkJc2VsZi50aXRsZSAgICAgID0gMTAxDQoJCQlzZWxmLm1zZyAgICAgICAgPSAxMDINCgkJCXNlbGYuc2Nyb2xsYmFyICA9IDEwMw0KCQkJc2VsZi5va2J1dHRvbiAgID0gMjAxDQoJCQlzZWxmLnNob3dkaWFsb2coKQ0KDQoJCWRlZiBzaG93ZGlhbG9nKHNlbGYpOg0KCQkJc2VsZi5nZXRDb250cm9sKHNlbGYudGl0bGUpLnNldExhYmVsKHRpdGxlKQ0KCQkJc2VsZi5nZXRDb250cm9sKHNlbGYubXNnKS5zZXRUZXh0KG1zZykNCgkJCXNlbGYuc2V0Rm9jdXNJZChzZWxmLnNjcm9sbGJhcikNCgkJCQ0KCQlkZWYgb25DbGljayhzZWxmLCBjb250cm9sSWQpOg0KCQkJaWYgKGNvbnRyb2xJZCA9PSBzZWxmLm9rYnV0dG9uKToNCgkJCQlzZWxmLmNsb3NlKCkNCgkJDQoJCWRlZiBvbkFjdGlvbihzZWxmLCBhY3Rpb24pOg0KCQkJaWYgICBhY3Rpb24gPT0gQUNUSU9OX1BSRVZJT1VTX01FTlU6IHNlbGYuY2xvc2UoKQ0KCQkJZWxpZiBhY3Rpb24gPT0gQUNUSU9OX05BVl9CQUNLOiBzZWxmLmNsb3NlKCkNCgkJCQ0KCXRiID0gVGV4dEJveGVzKCAiVGV4dGJveC54bWwiICwgQURET04uZ2V0QWRkb25JbmZvKCdwYXRoJyksICdEZWZhdWx0U2tpbicsIHRpdGxlPXRpdGxlLCBtc2c9bXNnKQ0KCXRiLmRvTW9kYWwoKQ0KCWRlbCB0Yg0KDQpkZWYgaGlnaGxpZ2h0VGV4dChtc2cpOg0KCW1zZyA9IG1zZy5yZXBsYWNlKCdcbicsICdbTkxdJykNCgltYXRjaGVzID0gcmUuY29tcGlsZSgiLS0+UHl0aG9uIGNhbGxiYWNrL3NjcmlwdCByZXR1cm5lZCB0aGUgZm9sbG93aW5nIGVycm9yPC0tKC4rPyktLT5FbmQgb2YgUHl0aG9uIHNjcmlwdCBlcnJvciByZXBvcnQ8LS0iKS5maW5kYWxsKG1zZykNCglmb3IgaXRlbSBpbiBtYXRjaGVzOg0KCQlzdHJpbmcgPSAnLS0+UHl0aG9uIGNhbGxiYWNrL3NjcmlwdCByZXR1cm5lZCB0aGUgZm9sbG93aW5nIGVycm9yPC0tJXMtLT5FbmQgb2YgUHl0aG9uIHNjcmlwdCBlcnJvciByZXBvcnQ8LS0nICUgaXRlbQ0KCQltc2cgICAgPSBtc2cucmVwbGFjZShzdHJpbmcsICdbQ09MT1IgcmVkXSVzWy9DT0xPUl0nICUgc3RyaW5nKQ0KCW1zZyA9IG1zZy5yZXBsYWNlKCdXQVJOSU5HJywgJ1tDT0xPUiB5ZWxsb3ddV0FSTklOR1svQ09MT1JdJykucmVwbGFjZSgnRVJST1InLCAnW0NPTE9SIHJlZF1FUlJPUlsvQ09MT1JdJykucmVwbGFjZSgnW05MXScsICdcbicpLnJlcGxhY2UoJzogRVhDRVBUSU9OIFRocm93biAoUHl0aG9uVG9DcHBFeGNlcHRpb24pIDonLCAnW0NPTE9SIHJlZF06IEVYQ0VQVElPTiBUaHJvd24gKFB5dGhvblRvQ3BwRXhjZXB0aW9uKSA6Wy9DT0xPUl0nKQ0KCW1zZyA9IG1zZy5yZXBsYWNlKCdcXFxcJywgJ1xcJykucmVwbGFjZShIT01FLCAnJykNCglyZXR1cm4gbXNnDQoNCmRlZiBMb2dOb3RpZnkodGl0bGUsIG1lc3NhZ2UsIHRpbWVzPTIwMDAsIGljb249SUNPTixzb3VuZD1GYWxzZSk6DQoJRElBTE9HLm5vdGlmaWNhdGlvbih0aXRsZSwgbWVzc2FnZSwgaWNvbiwgaW50KHRpbWVzKSwgc291bmQpDQoJI2ViaSgnWEJNQy5Ob3RpZmljYXRpb24oJXMsICVzLCAlcywgJXMpJyAlICh0aXRsZSwgbWVzc2FnZSwgdGltZXMsIGljb24pKQ0KDQpkZWYgcGVyY2VudGFnZShwYXJ0LCB3aG9sZSk6DQoJcmV0dXJuIDEwMCAqIGZsb2F0KHBhcnQpL2Zsb2F0KHdob2xlKQ0KDQpkZWYgYWRkb25VcGRhdGVzKGRvPU5vbmUpOg0KCXNldHRpbmcgPSAnImdlbmVyYWwuYWRkb251cGRhdGVzIicNCglpZiBkbyA9PSAnc2V0JzoNCgkJcXVlcnkgPSAneyJqc29ucnBjIjoiMi4wIiwgIm1ldGhvZCI6IlNldHRpbmdzLkdldFNldHRpbmdWYWx1ZSIsInBhcmFtcyI6eyJzZXR0aW5nIjolc30sICJpZCI6MX0nICUgKHNldHRpbmcpDQoJCXJlc3BvbnNlID0geGJtYy5leGVjdXRlSlNPTlJQQyhxdWVyeSkNCgkJbWF0Y2ggPSByZS5jb21waWxlKCd7InZhbHVlIjooLis/KX0nKS5maW5kYWxsKHJlc3BvbnNlKQ0KCQlpZiBsZW4obWF0Y2gpID4gMDogZGVmYXVsdCA9IG1hdGNoWzBdDQoJCWVsc2U6IGRlZmF1bHQgPSAwDQoJCXNldFMoJ2RlZmF1bHQuYWRkb251cGRhdGUnLCBzdHIoZGVmYXVsdCkpDQoJCXF1ZXJ5ID0gJ3sianNvbnJwYyI6IjIuMCIsICJtZXRob2QiOiJTZXR0aW5ncy5TZXRTZXR0aW5nVmFsdWUiLCJwYXJhbXMiOnsic2V0dGluZyI6JXMsInZhbHVlIjolc30sICJpZCI6MX0nICUgKHNldHRpbmcsICcyJykNCgkJcmVzcG9uc2UgPSB4Ym1jLmV4ZWN1dGVKU09OUlBDKHF1ZXJ5KQ0KCWVsaWYgZG8gPT0gJ3Jlc2V0JzoNCgkJdHJ5Og0KCQkJdmFsdWUgPSBpbnQoZmxvYXQoZ2V0UygnZGVmYXVsdC5hZGRvbnVwZGF0ZScpKSkNCgkJZXhjZXB0Og0KCQkJdmFsdWUgPSAwDQoJCWlmIG5vdCB2YWx1ZSBpbiBbMCwgMSwgMl06IHZhbHVlID0gMA0KCQlxdWVyeSA9ICd7Impzb25ycGMiOiIyLjAiLCAibWV0aG9kIjoiU2V0dGluZ3MuU2V0U2V0dGluZ1ZhbHVlIiwicGFyYW1zIjp7InNldHRpbmciOiVzLCJ2YWx1ZSI6JXN9LCAiaWQiOjF9JyAlIChzZXR0aW5nLCB2YWx1ZSkNCgkJcmVzcG9uc2UgPSB4Ym1jLmV4ZWN1dGVKU09OUlBDKHF1ZXJ5KQ0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIyMjIyBCdWlsZCBJbmZvICMjIyMjIyMjIw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCmRlZiBjaGVja0J1aWxkKG5hbWUsIHJldCk6DQoJaWYgbm90IHdvcmtpbmdVUkwoQlVJTERGSUxFKSA9PSBUcnVlOiByZXR1cm4gRmFsc2UNCglsaW5rID0gb3BlblVSTChCVUlMREZJTEUpLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpLnJlcGxhY2UoJ2d1aT0iIicsICdndWk9Imh0dHA6Ly8iJykucmVwbGFjZSgndGhlbWU9IiInLCAndGhlbWU9Imh0dHA6Ly8iJykNCgltYXRjaCA9IHJlLmNvbXBpbGUoJ25hbWU9IiVzIi4rP2Vyc2lvbj0iKC4rPykiLis/cmw9IiguKz8pIi4rP3VpPSIoLis/KSIuKz9vZGk9IiguKz8pIi4rP2hlbWU9IiguKz8pIi4rP2Nvbj0iKC4rPykiLis/YW5hcnQ9IiguKz8pIi4rP3Jldmlldz0iKC4rPykiLis/ZHVsdD0iKC4rPykiLis/ZXNjcmlwdGlvbj0iKC4rPykiLis/b3VudGVyPSIoLis/KSInICUgbmFtZSkuZmluZGFsbChsaW5rKQ0KCWlmIGxlbihtYXRjaCkgPiAwOg0KCQlmb3IgdmVyc2lvbiwgdXJsLCBndWksIGtvZGksIHRoZW1lLCBpY29uLCBmYW5hcnQsIHByZXZpZXcsIGFkdWx0LCBkZXNjcmlwdGlvbiwgY291bnRlciBpbiBtYXRjaDoNCgkJCWlmIHJldCAgID09ICd2ZXJzaW9uJzogICAgICAgcmV0dXJuIHZlcnNpb24NCgkJCWVsaWYgcmV0ID09ICd1cmwnOiAgICAgICAgICAgcmV0dXJuIHVybA0KCQkJZWxpZiByZXQgPT0gJ2d1aSc6ICAgICAgICAgICByZXR1cm4gZ3VpDQoJCQllbGlmIHJldCA9PSAna29kaSc6ICAgICAgICAgIHJldHVybiBrb2RpDQoJCQllbGlmIHJldCA9PSAndGhlbWUnOiAgICAgICAgIHJldHVybiB0aGVtZQ0KCQkJZWxpZiByZXQgPT0gJ2ljb24nOiAgICAgICAgICByZXR1cm4gaWNvbg0KCQkJZWxpZiByZXQgPT0gJ2ZhbmFydCc6ICAgICAgICByZXR1cm4gZmFuYXJ0DQoJCQllbGlmIHJldCA9PSAncHJldmlldyc6ICAgICAgIHJldHVybiBwcmV2aWV3DQoJCQllbGlmIHJldCA9PSAnYWR1bHQnOiAgICAgICAgIHJldHVybiBhZHVsdA0KCQkJZWxpZiByZXQgPT0gJ2Rlc2NyaXB0aW9uJzogICByZXR1cm4gZGVzY3JpcHRpb24NCgkJCWVsaWYgcmV0ID09ICdjb3VudGVyJzoJCSByZXR1cm4gY291bnRlcg0KCQkJZWxpZiByZXQgPT0gJ2FsbCc6ICAgICAgICAgICByZXR1cm4gbmFtZSwgdmVyc2lvbiwgdXJsLCBndWksIGtvZGksIHRoZW1lLCBpY29uLCBmYW5hcnQsIHByZXZpZXcsIGFkdWx0LCBkZXNjcmlwdGlvbiwgY291bnRlcg0KCWVsc2U6IHJldHVybiBGYWxzZQ0KDQpkZWYgY2hlY2tUaGVtZShuYW1lLCB0aGVtZSwgcmV0KToNCgl0aGVtZXVybCA9IGNoZWNrQnVpbGQobmFtZSwgJ3RoZW1lJykNCglpZiBub3Qgd29ya2luZ1VSTCh0aGVtZXVybCkgPT0gVHJ1ZTogcmV0dXJuIEZhbHNlDQoJbGluayA9IG9wZW5VUkwodGhlbWV1cmwpLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpDQoJbWF0Y2ggPSByZS5jb21waWxlKCduYW1lPSIlcyIuKz9ybD0iKC4rPykiLis/Y29uPSIoLis/KSIuKz9hbmFydD0iKC4rPykiLis/ZHVsdD0oLis/KS4rP2VzY3JpcHRpb249IiguKz8pIicgJSB0aGVtZSkuZmluZGFsbChsaW5rKQ0KCWlmIGxlbihtYXRjaCkgPiAwOg0KCQlmb3IgdXJsLCBpY29uLCBmYW5hcnQsIGFkdWx0LCBkZXNjcmlwdGlvbiBpbiBtYXRjaDoNCgkJCWlmIHJldCAgID09ICd1cmwnOiAgICAgICAgICAgcmV0dXJuIHVybA0KCQkJZWxpZiByZXQgPT0gJ2ljb24nOiAgICAgICAgICByZXR1cm4gaWNvbg0KCQkJZWxpZiByZXQgPT0gJ2ZhbmFydCc6ICAgICAgICByZXR1cm4gZmFuYXJ0DQoJCQllbGlmIHJldCA9PSAnYWR1bHQnOiAgICAgICAgIHJldHVybiBhZHVsdA0KCQkJZWxpZiByZXQgPT0gJ2Rlc2NyaXB0aW9uJzogICByZXR1cm4gZGVzY3JpcHRpb24NCgkJCWVsaWYgcmV0ID09ICdhbGwnOiAgICAgICAgICAgcmV0dXJuIG5hbWUsIHRoZW1lLCB1cmwsIGljb24sIGZhbmFydCwgYWR1bHQsIGRlc2NyaXB0aW9uDQoJZWxzZTogcmV0dXJuIEZhbHNlDQoNCmRlZiBjaGVja1dpemFyZChyZXQpOg0KCWlmIG5vdCB3b3JraW5nVVJMKFdJWkFSREZJTEUpID09IFRydWU6IHJldHVybiBGYWxzZQ0KCWxpbmsgPSBvcGVuVVJMKFdJWkFSREZJTEUpLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpDQoJbWF0Y2ggPSByZS5jb21waWxlKCdpZD0iJXMiLis/ZXJzaW9uPSIoLis/KSIuKz9pcD0iKC4rPykiJyAlIEFERE9OX0lEKS5maW5kYWxsKGxpbmspDQoJaWYgbGVuKG1hdGNoKSA+IDA6DQoJCWZvciB2ZXJzaW9uLCB6aXAgaW4gbWF0Y2g6DQoJCQlpZiByZXQgICA9PSAndmVyc2lvbic6ICAgICAgIHJldHVybiB2ZXJzaW9uDQoJCQllbGlmIHJldCA9PSAnemlwJzogICAgICAgICAgIHJldHVybiB6aXANCgkJCWVsaWYgcmV0ID09ICdhbGwnOiAgICAgICAgICAgcmV0dXJuIEFERE9OX0lELCB2ZXJzaW9uLCB6aXANCgllbHNlOiByZXR1cm4gRmFsc2UNCg0KZGVmIGJ1aWxkQ291bnQodmVyPU5vbmUpOg0KCWxpbmsgID0gb3BlblVSTChCVUlMREZJTEUpLnJlcGxhY2UoJ1xuJywnJykucmVwbGFjZSgnXHInLCcnKS5yZXBsYWNlKCdcdCcsJycpDQoJbWF0Y2ggPSByZS5jb21waWxlKCduYW1lPSIoLis/KSIuKz9vZGk9IiguKz8pIi4rP2R1bHQ9IiguKz8pIicpLmZpbmRhbGwobGluaykNCgl0b3RhbCA9IDA7IGNvdW50MTUgPSAwOyBjb3VudDE2ID0gMDsgY291bnQxNyA9IDA7IGNvdW50MTggPSAwOyBoaWRkZW4gPSAwOyBhZHVsdGNvdW50ID0gMA0KCWlmIGxlbihtYXRjaCkgPiAwOg0KCQlmb3IgbmFtZSwga29kaSwgYWR1bHQgaW4gbWF0Y2g6DQoJCQlpZiBub3QgU0hPV0FEVUxUID09ICd0cnVlJyBhbmQgYWR1bHQubG93ZXIoKSA9PSAneWVzJzogaGlkZGVuICs9IDE7IGFkdWx0Y291bnQgKz0xOyBjb250aW51ZQ0KCQkJaWYgbm90IERFVkVMT1BFUiA9PSAndHJ1ZScgYW5kIHN0clRlc3QobmFtZSk6IGhpZGRlbiArPSAxOyBjb250aW51ZQ0KCQkJa29kaSA9IGludChmbG9hdChrb2RpKSkNCgkJCXRvdGFsICs9IDENCgkJCWlmIGtvZGkgPT0gMTg6IGNvdW50MTggKz0gMQ0KCQkJZWxpZiBrb2RpID09IDE3OiBjb3VudDE3ICs9IDENCgkJCWVsaWYga29kaSA9PSAxNjogY291bnQxNiArPSAxDQoJCQllbGlmIGtvZGkgPD0gMTU6IGNvdW50MTUgKz0gMQ0KCXJldHVybiB0b3RhbCwgY291bnQxNSwgY291bnQxNiwgY291bnQxNywgY291bnQxOCwgYWR1bHRjb3VudCwgaGlkZGVuDQoNCmRlZiBzdHJUZXN0KHN0cmluZyk6DQoJYSA9IChzdHJpbmcubG93ZXIoKSkuc3BsaXQoJyAnKQ0KCWlmICd0ZXN0JyBpbiBhOiByZXR1cm4gVHJ1ZQ0KCWVsc2U6IHJldHVybiBGYWxzZQ0KDQpkZWYgdGhlbWVDb3VudChuYW1lLCBjb3VudD1UcnVlKToNCgl0aGVtZWZpbGUgPSBjaGVja0J1aWxkKG5hbWUsICd0aGVtZScpDQoJaWYgdGhlbWVmaWxlID09ICdodHRwOi8vJzogcmV0dXJuIEZhbHNlDQoJbGluayA9IG9wZW5VUkwodGhlbWVmaWxlKS5yZXBsYWNlKCdcbicsJycpLnJlcGxhY2UoJ1xyJywnJykucmVwbGFjZSgnXHQnLCcnKQ0KCW1hdGNoID0gcmUuY29tcGlsZSgnbmFtZT0iKC4rPykiLis/ZHVsdD0iKC4rPykiJykuZmluZGFsbChsaW5rKQ0KCWlmIGxlbihtYXRjaCkgPT0gMDogcmV0dXJuIEZhbHNlDQoJdGhlbWVzID0gW10NCglmb3IgaXRlbSwgYWR1bHQgaW4gbWF0Y2g6DQoJCWlmIG5vdCBTSE9XQURVTFQgPT0gJ3RydWUnIGFuZCBhZHVsdC5sb3dlcigpID09ICd5ZXMnOiBjb250aW51ZQ0KCQl0aGVtZXMuYXBwZW5kKGl0ZW0pDQoJaWYgbGVuKHRoZW1lcykgPiAwOg0KCQlpZiBjb3VudCA9PSBUcnVlOiByZXR1cm4gbGVuKHRoZW1lcykNCgkJZWxzZTogcmV0dXJuIHRoZW1lcw0KCWVsc2U6IHJldHVybiBGYWxzZQ0KDQpkZWYgdGhpcmRQYXJ0eSh1cmw9Tm9uZSk6DQoJaWYgdXJsID09IE5vbmU6IHJldHVybg0KCWxpbmsgPSBvcGVuVVJMKHVybCkucmVwbGFjZSgnXG4nLCcnKS5yZXBsYWNlKCdccicsJycpLnJlcGxhY2UoJ1x0JywnJykNCgltYXRjaCAgPSByZS5jb21waWxlKCduYW1lPSIoLis/KSIuKz9lcnNpb249IiguKz8pIi4rP3JsPSIoLis/KSIuKz9vZGk9IiguKz8pIi4rP2Nvbj0iKC4rPykiLis/YW5hcnQ9IiguKz8pIi4rP2R1bHQ9IiguKz8pIi4rP2VzY3JpcHRpb249IiguKz8pIicpLmZpbmRhbGwobGluaykNCgltYXRjaDIgPSByZS5jb21waWxlKCduYW1lPSIoLis/KSIuKz9ybD0iKC4rPykiLis/bWc9IiguKz8pIi4rP2FuYXJ0PSIoLis/KSIuKz9lc2NyaXB0aW9uPSIoLis/KSInKS5maW5kYWxsKGxpbmspDQoJaWYgbGVuKG1hdGNoKSA+IDA6DQoJCXJldHVybiBUcnVlLCBtYXRjaA0KCWVsaWYgbGVuKG1hdGNoMikgPiAwOg0KCQlyZXR1cm4gRmFsc2UsIG1hdGNoMg0KCWVsc2U6DQoJCXJldHVybiBGYWxzZSwgW10NCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMjIyMgVVJMIENoZWNrcyAjIyMjIyMjIyMNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIA0KZGVmIHdvcmtpbmdVUkwodXJsKToNCglpZiB1cmwgaW4gWydodHRwOi8vJywgJ2h0dHBzOi8vJywgJyddOiByZXR1cm4gRmFsc2UNCgljaGVjayA9IDA7IHN0YXR1cyA9ICcnDQoJd2hpbGUgY2hlY2sgPCAzOg0KCQljaGVjayArPSAxDQoJCXRyeToNCgkJCXJlcSA9IHVybGxpYjIuUmVxdWVzdCh1cmwpDQoJCQlyZXEuYWRkX2hlYWRlcignVXNlci1BZ2VudCcsIFVTRVJfQUdFTlQpDQoJCQlyZXNwb25zZSA9IHVybGxpYjIudXJsb3BlbihyZXEpDQoJCQlyZXNwb25zZS5jbG9zZSgpDQoJCQlzdGF0dXMgPSBUcnVlDQoJCQlicmVhaw0KCQlleGNlcHQgRXhjZXB0aW9uLCBlOg0KCQkJc3RhdHVzID0gc3RyKGUpDQoJCQlsb2coIldvcmtpbmcgVXJsIEVycm9yOiAlcyBbJXNdIiAlIChlLCB1cmwpKQ0KCQkJeGJtYy5zbGVlcCg1MDApDQoJcmV0dXJuIHN0YXR1cw0KIA0KZGVmIG9wZW5VUkwodXJsKToNCglyZXEgPSB1cmxsaWIyLlJlcXVlc3QodXJsKQ0KCXJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JywgVVNFUl9BR0VOVCkNCglyZXNwb25zZSA9IHVybGxpYjIudXJsb3BlbihyZXEpDQoJbGluaz1yZXNwb25zZS5yZWFkKCkNCglyZXNwb25zZS5jbG9zZSgpDQoJcmV0dXJuIGxpbmsNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMjIyMgTWlzYyBGdW5jdGlvbnMgIyMjIyMNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpkZWYgZ2V0S2V5Ym9hcmQoIGRlZmF1bHQ9IiIsIGhlYWRpbmc9IiIsIGhpZGRlbj1GYWxzZSApOg0KCWtleWJvYXJkID0geGJtYy5LZXlib2FyZCggZGVmYXVsdCwgaGVhZGluZywgaGlkZGVuICkNCglrZXlib2FyZC5kb01vZGFsKCkNCglpZiBrZXlib2FyZC5pc0NvbmZpcm1lZCgpOg0KCQlyZXR1cm4gdW5pY29kZSgga2V5Ym9hcmQuZ2V0VGV4dCgpLCAidXRmLTgiICkNCglyZXR1cm4gZGVmYXVsdA0KDQpkZWYgZ2V0U2l6ZShwYXRoLCB0b3RhbD0wKToNCglmb3IgZGlycGF0aCwgZGlybmFtZXMsIGZpbGVuYW1lcyBpbiBvcy53YWxrKHBhdGgpOg0KCQlmb3IgZiBpbiBmaWxlbmFtZXM6DQoJCQlmcCA9IG9zLnBhdGguam9pbihkaXJwYXRoLCBmKQ0KCQkJdG90YWwgKz0gb3MucGF0aC5nZXRzaXplKGZwKQ0KCXJldHVybiB0b3RhbA0KDQpkZWYgY29udmVydFNpemUobnVtLCBzdWZmaXg9J0InKToNCglmb3IgdW5pdCBpbiBbJycsICdLJywgJ00nLCAnRyddOg0KCQlpZiBhYnMobnVtKSA8IDEwMjQuMDoNCgkJCXJldHVybiAiJTMuMDJmICVzJXMiICUgKG51bSwgdW5pdCwgc3VmZml4KQ0KCQludW0gLz0gMTAyNC4wDQoJcmV0dXJuICIlLjAyZiAlcyVzIiAlIChudW0sICdHJywgc3VmZml4KQ0KDQpkZWYgZ2V0Q2FjaGVTaXplKCk6DQoJUFJPRklMRUFERE9OREFUQSA9IG9zLnBhdGguam9pbihQUk9GSUxFLCdhZGRvbl9kYXRhJykNCglkYmZpbGVzICAgPSBbDQoJCShvcy5wYXRoLmpvaW4oQURET05EQVRBLCAncGx1Z2luLnZpZGVvLnBoc3RyZWFtcycsICdjYWNoZS5kYicpKSwNCgkJKG9zLnBhdGguam9pbihBRERPTkRBVEEsICdwbHVnaW4udmlkZW8uYm9iJywgJ2NhY2hlLmRiJykpLA0KCQkob3MucGF0aC5qb2luKEFERE9OREFUQSwgJ3BsdWdpbi52aWRlby5zcGVjdG8nLCAnY2FjaGUuZGInKSksDQoJCShvcy5wYXRoLmpvaW4oQURET05EQVRBLCAncGx1Z2luLnZpZGVvLmdlbmVzaXMnLCAnY2FjaGUuZGInKSksDQoJCShvcy5wYXRoLmpvaW4oQURET05EQVRBLCAncGx1Z2luLnZpZGVvLmV4b2R1cycsICdjYWNoZS5kYicpKSwNCgkJKG9zLnBhdGguam9pbihEQVRBQkFTRSwgICdvbmVjaGFubmVsY2FjaGUuZGInKSksDQoJCShvcy5wYXRoLmpvaW4oREFUQUJBU0UsICAnc2FsdHNjYWNoZS5kYicpKSwNCgkJKG9zLnBhdGguam9pbihEQVRBQkFTRSwgICdzYWx0c2hkLmxpdGUuZGInKSldDQoJY2FjaGVsaXN0ID0gWw0KCQkoUFJPRklMRUFERE9OREFUQSksDQoJCShBRERPTkRBVEEpLA0KCQkob3MucGF0aC5qb2luKEhPTUUsJ2NhY2hlJykpLA0KCQkob3MucGF0aC5qb2luKEhPTUUsJ3RlbXAnKSksDQoJCShvcy5wYXRoLmpvaW4oJy9wcml2YXRlL3Zhci9tb2JpbGUvTGlicmFyeS9DYWNoZXMvQXBwbGVUVi9WaWRlby8nLCAnT3RoZXInKSksDQoJCShvcy5wYXRoLmpvaW4oJy9wcml2YXRlL3Zhci9tb2JpbGUvTGlicmFyeS9DYWNoZXMvQXBwbGVUVi9WaWRlby8nLCAnTG9jYWxBbmRSZW50YWwnKSksDQoJCShvcy5wYXRoLmpvaW4oQURET05EQVRBLCdzY3JpcHQubW9kdWxlLnNpbXBsZS5kb3dubG9hZGVyJykpLA0KCQkob3MucGF0aC5qb2luKEFERE9OREFUQSwncGx1Z2luLnZpZGVvLml0dicsJ0ltYWdlcycpKSwNCgkJKG9zLnBhdGguam9pbihQUk9GSUxFQURET05EQVRBLCdzY3JpcHQubW9kdWxlLnNpbXBsZS5kb3dubG9hZGVyJykpLA0KCQkob3MucGF0aC5qb2luKFBST0ZJTEVBRERPTkRBVEEsJ3BsdWdpbi52aWRlby5pdHYnLCdJbWFnZXMnKSldDQoJCQ0KCXRvdGFsc2l6ZSA9IDANCg0KCWZvciBpdGVtIGluIGNhY2hlbGlzdDoNCgkJaWYgb3MucGF0aC5leGlzdHMoaXRlbSkgYW5kIG5vdCBpdGVtIGluIFtBRERPTkRBVEEsIFBST0ZJTEVBRERPTkRBVEFdOg0KCQkJdG90YWxzaXplID0gZ2V0U2l6ZShpdGVtLCB0b3RhbHNpemUpDQoJCWVsc2U6DQoJCQlmb3Igcm9vdCwgZGlycywgZmlsZXMgaW4gb3Mud2FsayhpdGVtKToNCgkJCQlmb3IgZCBpbiBkaXJzOg0KCQkJCQlpZiAnY2FjaGUnIGluIGQubG93ZXIoKSBhbmQgbm90IGQubG93ZXIoKSA9PSAnbWV0YV9jYWNoZSc6IHRvdGFsc2l6ZSA9IGdldFNpemUob3MucGF0aC5qb2luKHJvb3QsIGQpLCB0b3RhbHNpemUpDQoJDQoJaWYgSU5DTFVERVZJREVPID09ICd0cnVlJzoNCgkJZmlsZXMgPSBbXQ0KCQlpZiBJTkNMVURFQUxMID09ICd0cnVlJzogZmlsZXMgPSBkYmZpbGVzDQoJCWVsc2U6DQoJCQlpZiBJTkNMVURFQk9CID09ICd0cnVlJzogICAgIGZpbGVzLmFwcGVuZChvcy5wYXRoLmpvaW4oQURET05EQVRBLCAncGx1Z2luLnZpZGVvLmJvYicsICdjYWNoZS5kYicpKQ0KCQkJaWYgSU5DTFVERVBIT0VOSVggPT0gJ3RydWUnOiBmaWxlcy5hcHBlbmQob3MucGF0aC5qb2luKEFERE9OREFUQSwgJ3BsdWdpbi52aWRlby5waHN0cmVhbXMnLCAnY2FjaGUuZGInKSkNCgkJCWlmIElOQ0xVREVTUEVDVE8gPT0gJ3RydWUnOiAgZmlsZXMuYXBwZW5kKG9zLnBhdGguam9pbihBRERPTkRBVEEsICdwbHVnaW4udmlkZW8uc3BlY3RvJywgJ2NhY2hlLmRiJykpDQoJCQlpZiBJTkNMVURFR0VORVNJUyA9PSAndHJ1ZSc6IGZpbGVzLmFwcGVuZChvcy5wYXRoLmpvaW4oQURET05EQVRBLCAncGx1Z2luLnZpZGVvLmdlbmVzaXMnLCAnY2FjaGUuZGInKSkNCgkJCWlmIElOQ0xVREVFWE9EVVMgPT0gJ3RydWUnOiAgZmlsZXMuYXBwZW5kKG9zLnBhdGguam9pbihBRERPTkRBVEEsICdwbHVnaW4udmlkZW8uZXhvZHVzJywgJ2NhY2hlLmRiJykpDQoJCQlpZiBJTkNMVURFT05FQ0hBTiA9PSAndHJ1ZSc6IGZpbGVzLmFwcGVuZChvcy5wYXRoLmpvaW4oREFUQUJBU0UsICAnb25lY2hhbm5lbGNhY2hlLmRiJykpDQoJCQlpZiBJTkNMVURFU0FMVFMgPT0gJ3RydWUnOiAgIGZpbGVzLmFwcGVuZChvcy5wYXRoLmpvaW4oREFUQUJBU0UsICAnc2FsdHNjYWNoZS5kYicpKQ0KCQkJaWYgSU5DTFVERVNBTFRTSEQgPT0gJ3RydWUnOiBmaWxlcy5hcHBlbmQob3MucGF0aC5qb2luKERBVEFCQVNFLCAgJ3NhbHRzaGQubGl0ZS5kYicpKQ0KCQlpZiBsZW4oZmlsZXMpID4gMDoNCgkJCWZvciBpdGVtIGluIGZpbGVzOiB0b3RhbHNpemUgPSBnZXRTaXplKGl0ZW0sIHRvdGFsc2l6ZSkNCgkJZWxzZTogbG9nKCJDbGVhciBDYWNoZTogQ2xlYXIgVmlkZW8gQ2FjaGUgTm90IEVuYWJsZWQiLCB4Ym1jLkxPR05PVElDRSkNCglyZXR1cm4gdG90YWxzaXplDQoNCmRlZiBnZXRJbmZvKGxhYmVsKToNCgl0cnk6IHJldHVybiB4Ym1jLmdldEluZm9MYWJlbChsYWJlbCkNCglleGNlcHQ6IHJldHVybiBGYWxzZQ0KDQpkZWYgcmVtb3ZlRm9sZGVyKHBhdGgpOg0KCWxvZygiRGVsZXRpbmcgRm9sZGVyOiAlcyIgJSBwYXRoLCB4Ym1jLkxPR05PVElDRSkNCgl0cnk6IHNodXRpbC5ybXRyZWUocGF0aCxpZ25vcmVfZXJyb3JzPVRydWUsIG9uZXJyb3I9Tm9uZSkNCglleGNlcHQ6IHJldHVybiBGYWxzZQ0KDQpkZWYgcmVtb3ZlRmlsZShwYXRoKToNCglsb2coIkRlbGV0aW5nIEZpbGU6ICVzIiAlIHBhdGgsIHhibWMuTE9HTk9USUNFKQ0KCXRyeTogICAgb3MucmVtb3ZlKHBhdGgpDQoJZXhjZXB0OiByZXR1cm4gRmFsc2UNCg0KZGVmIGN1cnJTa2luKCk6DQoJcmV0dXJuIHhibWMuZ2V0U2tpbkRpcigpDQoNCmRlZiBjbGVhbkhvdXNlKGZvbGRlciwgaWdub3JlPUZhbHNlKToNCglsb2coZm9sZGVyKQ0KCXRvdGFsX2ZpbGVzID0gMDsgdG90YWxfZm9sZHMgPSAwDQoJZm9yIHJvb3QsIGRpcnMsIGZpbGVzIGluIG9zLndhbGsoZm9sZGVyKToNCgkJaWYgaWdub3JlID09IEZhbHNlOiBkaXJzWzpdID0gW2QgZm9yIGQgaW4gZGlycyBpZiBkIG5vdCBpbiBFWENMVURFU10NCgkJZmlsZV9jb3VudCA9IDANCgkJZmlsZV9jb3VudCArPSBsZW4oZmlsZXMpDQoJCWlmIGZpbGVfY291bnQgPj0gMDoNCgkJCWZvciBmIGluIGZpbGVzOg0KCQkJCXRyeTogDQoJCQkJCW9zLnVubGluayhvcy5wYXRoLmpvaW4ocm9vdCwgZikpDQoJCQkJCXRvdGFsX2ZpbGVzICs9IDENCgkJCQlleGNlcHQ6IA0KCQkJCQl0cnk6DQoJCQkJCQlzaHV0aWwucm10cmVlKG9zLnBhdGguam9pbihyb290LCBmKSkNCgkJCQkJZXhjZXB0Og0KCQkJCQkJbG9nKCJFcnJvciBEZWxldGluZyAlcyIgJSBmLCB4Ym1jLkxPR0VSUk9SKQ0KCQkJZm9yIGQgaW4gZGlyczoNCgkJCQl0b3RhbF9mb2xkcyArPSAxDQoJCQkJdHJ5OiANCgkJCQkJc2h1dGlsLnJtdHJlZShvcy5wYXRoLmpvaW4ocm9vdCwgZCkpDQoJCQkJCXRvdGFsX2ZvbGRzICs9IDENCgkJCQlleGNlcHQ6IA0KCQkJCQlsb2coIkVycm9yIERlbGV0aW5nICVzIiAlIGQsIHhibWMuTE9HRVJST1IpDQoJcmV0dXJuIHRvdGFsX2ZpbGVzLCB0b3RhbF9mb2xkcw0KDQpkZWYgZW1wdHlmb2xkZXIoZm9sZGVyKToNCgl0b3RhbCA9IDANCglmb3Igcm9vdCwgZGlycywgZmlsZXMgaW4gb3Mud2Fsayhmb2xkZXIsIHRvcGRvd249VHJ1ZSk6DQoJCWRpcnNbOl0gPSBbZCBmb3IgZCBpbiBkaXJzIGlmIGQgbm90IGluIEVYQ0xVREVTXQ0KCQlmaWxlX2NvdW50ID0gMA0KCQlmaWxlX2NvdW50ICs9IGxlbihmaWxlcykgKyBsZW4oZGlycykNCgkJaWYgZmlsZV9jb3VudCA9PSAwOg0KCQkJc2h1dGlsLnJtdHJlZShvcy5wYXRoLmpvaW4ocm9vdCkpDQoJCQl0b3RhbCArPSAxDQoJCQlsb2coIkVtcHR5IEZvbGRlcjogJXMiICUgcm9vdCwgeGJtYy5MT0dOT1RJQ0UpDQoJcmV0dXJuIHRvdGFsDQoNCmRlZiBsb2cobXNnLCBsZXZlbD14Ym1jLkxPR0RFQlVHKToNCglpZiBub3Qgb3MucGF0aC5leGlzdHMoQURET05EQVRBKTogb3MubWFrZWRpcnMoQURET05EQVRBKQ0KCWlmIG5vdCBvcy5wYXRoLmV4aXN0cyhXSVpMT0cpOiBmID0gb3BlbihXSVpMT0csICd3Jyk7IGYuY2xvc2UoKQ0KCWlmIFdJWkRFQlVHR0lORyA9PSAnZmFsc2UnOiByZXR1cm4gRmFsc2UNCglpZiBERUJVR0xFVkVMID09ICcwJzogcmV0dXJuIEZhbHNlDQoJaWYgREVCVUdMRVZFTCA9PSAnMScgYW5kIG5vdCBsZXZlbCBpbiBbeGJtYy5MT0dOT1RJQ0UsIHhibWMuTE9HRVJST1IsIHhibWMuTE9HU0VWRVJFLCB4Ym1jLkxPR0ZBVEFMXTogcmV0dXJuIEZhbHNlDQoJaWYgREVCVUdMRVZFTCA9PSAnMic6IGxldmVsID0geGJtYy5MT0dOT1RJQ0UNCgl0cnk6DQoJCWlmIGlzaW5zdGFuY2UobXNnLCB1bmljb2RlKToNCgkJCW1zZyA9ICclcycgJSAobXNnLmVuY29kZSgndXRmLTgnKSkNCgkJeGJtYy5sb2coJyVzOiAlcycgJSAoQURET05USVRMRSwgbXNnKSwgbGV2ZWwpDQoJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQl0cnk6IHhibWMubG9nKCdMb2dnaW5nIEZhaWx1cmU6ICVzJyAlIChlKSwgbGV2ZWwpDQoJCWV4Y2VwdDogcGFzcw0KCWlmIEVOQUJMRVdJWkxPRyA9PSAndHJ1ZSc6DQoJCWxhc3RjaGVjayA9IGdldFMoJ25leHRjbGVhbmRhdGUnKSBpZiBub3QgZ2V0UygnbmV4dGNsZWFuZGF0ZScpID09ICcnIGVsc2Ugc3RyKFRPREFZKQ0KCQlpZiBDTEVBTldJWkxPRyA9PSAndHJ1ZScgYW5kIGxhc3RjaGVjayA8PSBzdHIoVE9EQVkpOiBjaGVja0xvZygpDQoJCXdpdGggb3BlbihXSVpMT0csICdhJykgYXMgZjoNCgkJCWxpbmUgPSAiWyVzICVzXSAlcyIgJSAoZGF0ZXRpbWUubm93KCkuZGF0ZSgpLCBzdHIoZGF0ZXRpbWUubm93KCkudGltZSgpKVs6OF0sIG1zZykNCgkJCWYud3JpdGUobGluZS5yc3RyaXAoJ1xyXG4nKSsnXG4nKQ0KDQpkZWYgY2hlY2tMb2coKToNCgluZXh0Y2xlYW4gPSBnZXRTKCduZXh0Y2xlYW5kYXRlJykNCgluZXh0ID0gVE9NT1JST1cNCglpZiBDTEVBTldJWkxPR0JZID09ICcwJzoNCgkJa2VlcCA9IFRPREFZIC0gdGltZWRlbHRhKGRheXM9TUFYV0laREFURVNbaW50KGZsb2F0KENMRUFOREFZUykpXSkNCgkJeCAgICA9IDANCgkJZiAgICA9IG9wZW4oV0laTE9HKTsgYSA9IGYucmVhZCgpOyBmLmNsb3NlKCk7IGxpbmVzID0gYS5zcGxpdCgnXG4nKQ0KCQlmb3IgbGluZSBpbiBsaW5lczoNCgkJCWlmIHN0cihsaW5lWzE6MTFdKSA+PSBzdHIoa2VlcCk6DQoJCQkJYnJlYWsNCgkJCXggKz0gMQ0KCQluZXdmaWxlID0gbGluZXNbeDpdDQoJCXdyaXRpbmcgPSAnXG4nLmpvaW4obmV3ZmlsZSkNCgkJZiA9IG9wZW4oV0laTE9HLCAndycpOyBmLndyaXRlKHdyaXRpbmcpOyBmLmNsb3NlKCkNCgllbGlmIENMRUFOV0laTE9HQlkgPT0gJzEnOg0KCQltYXhzaXplID0gTUFYV0laU0laRVtpbnQoZmxvYXQoQ0xFQU5TSVpFKSldKjEwMjQNCgkJZiAgICA9IG9wZW4oV0laTE9HKTsgYSA9IGYucmVhZCgpOyBmLmNsb3NlKCk7IGxpbmVzID0gYS5zcGxpdCgnXG4nKQ0KCQlpZiBvcy5wYXRoLmdldHNpemUoV0laTE9HKSA+PSBtYXhzaXplOg0KCQkJc3RhcnQgPSBsZW4obGluZXMpLzINCgkJCW5ld2ZpbGUgPSBsaW5lc1tzdGFydDpdDQoJCQl3cml0aW5nID0gJ1xuJy5qb2luKG5ld2ZpbGUpDQoJCQlmID0gb3BlbihXSVpMT0csICd3Jyk7IGYud3JpdGUod3JpdGluZyk7IGYuY2xvc2UoKQ0KCWVsaWYgQ0xFQU5XSVpMT0dCWSA9PSAnMic6DQoJCWYgICAgICA9IG9wZW4oV0laTE9HKTsgYSA9IGYucmVhZCgpOyBmLmNsb3NlKCk7IGxpbmVzID0gYS5zcGxpdCgnXG4nKQ0KCQltYXhsaW5lcyA9IE1BWFdJWkxJTkVTW2ludChmbG9hdChDTEVBTkxJTkVTKSldDQoJCWlmIGxlbihsaW5lcykgPiBtYXhsaW5lczoNCgkJCXN0YXJ0ID0gbGVuKGxpbmVzKSAtIGludChtYXhsaW5lcy8yKQ0KCQkJbmV3ZmlsZSA9IGxpbmVzW3N0YXJ0Ol0NCgkJCXdyaXRpbmcgPSAnXG4nLmpvaW4obmV3ZmlsZSkNCgkJCWYgPSBvcGVuKFdJWkxPRywgJ3cnKTsgZi53cml0ZSh3cml0aW5nKTsgZi5jbG9zZSgpDQoJc2V0UygnbmV4dGNsZWFuZGF0ZScsIHN0cihuZXh0KSkNCg0KZGVmIGxhdGVzdERCKERCKToNCglpZiBEQiBpbiBbJ0FkZG9ucycsICdBRFNQJywgJ0VwZycsICdNeU11c2ljJywgJ015VmlkZW9zJywgJ1RleHR1cmVzJywgJ1RWJywgJ1ZpZXdNb2RlcyddOg0KCQltYXRjaCA9IGdsb2IuZ2xvYihvcy5wYXRoLmpvaW4oREFUQUJBU0UsJyVzKi5kYicgJSBEQikpDQoJCWNvbXAgPSAnJXMoLis/KS5kYicgJSBEQlsxOl0NCgkJaGlnaGVzdCA9IDANCgkJZm9yIGZpbGUgaW4gbWF0Y2ggOg0KCQkJdHJ5OiBjaGVjayA9IGludChyZS5jb21waWxlKGNvbXApLmZpbmRhbGwoZmlsZSlbMF0pDQoJCQlleGNlcHQ6IGNoZWNrID0gMA0KCQkJaWYgaGlnaGVzdCA8IGNoZWNrIDoNCgkJCQloaWdoZXN0ID0gY2hlY2sNCgkJcmV0dXJuICclcyVzLmRiJyAlIChEQiwgaGlnaGVzdCkNCgllbHNlOiByZXR1cm4gRmFsc2UNCg0KZGVmIGFkZG9uSWQoYWRkKToNCgl0cnk6IA0KCQlyZXR1cm4geGJtY2FkZG9uLkFkZG9uKGlkPWFkZCkNCglleGNlcHQ6DQoJCXJldHVybiBGYWxzZQ0KDQpkZWYgdG9nZ2xlRGVwZW5kZW5jeShuYW1lLCBEUD1Ob25lKToNCglkZXA9b3MucGF0aC5qb2luKEFERE9OUywgbmFtZSwgJ2FkZG9uLnhtbCcpDQoJaWYgb3MucGF0aC5leGlzdHMoZGVwKToNCgkJc291cmNlID0gb3BlbihkZXAsbW9kZT0ncicpOyBsaW5rPXNvdXJjZS5yZWFkKCk7IHNvdXJjZS5jbG9zZSgpOyANCgkJbWF0Y2ggID0gcGFyc2VET00obGluaywgJ2ltcG9ydCcsIHJldD0nYWRkb24nKQ0KCQlmb3IgZGVwZW5kcyBpbiBtYXRjaDoNCgkJCWlmIG5vdCAneGJtYy5weXRob24nIGluIGRlcGVuZHM6DQoJCQkJZGVwZW5kc3BhdGg9b3MucGF0aC5qb2luKEFERE9OUywgZGVwZW5kcykNCgkJCQlpZiBub3QgRFAgPT0gTm9uZTogDQoJCQkJCURQLnVwZGF0ZSgiIiwiQ2hlY2tpbmcgRGVwZW5kZW5jeSBbQ09MT1IgeWVsbG93XSVzWy9DT0xPUl0gZm9yIFtDT0xPUiB5ZWxsb3ddJXNbL0NPTE9SXSIgJSAoZGVwZW5kcywgbmFtZSksIiIpDQoJCQkJaWYgb3MucGF0aC5leGlzdHMoZGVwZW5kc3BhdGgpOg0KCQkJCQl0b2dnbGVBZGRvbihuYW1lLCAndHJ1ZScpDQoJCQl4Ym1jLnNsZWVwKDEwMCkNCg0KZGVmIHRvZ2dsZUFkdWx0KCk6DQoJZG8gPSBESUFMT0cueWVzbm8oQURET05USVRMRSwgIltDT0xPUiAlc11Xb3VsZCB5b3UgbGlrZSB0byBbQ09MT1IgJXNdRW5hYmxlWy9DT0xPUl0gb3IgW0NPTE9SICVzXURpc2FibGVbL0NPTE9SXSBhbGwgQWR1bHQgYWRkb25zP1svQ09MT1JdIiAlIChDT0xPUjIsIENPTE9SMSwgQ09MT1IxKSwgeWVzbGFiZWw9IltCXVtDT0xPUiBncmVlbl1FbmFibGVbL0NPTE9SXVsvQl0iLCBub2xhYmVsPSJbQl1bQ09MT1IgcmVkXURpc2FibGVbL0NPTE9SXVsvQl0iKQ0KCXN0YXRlID0gJ3RydWUnIGlmIGRvID09IDEgZWxzZSAnZmFsc2UnDQoJZ290byA9ICdFbmFibGluZycgaWYgZG8gPT0gMSBlbHNlICdEaXNhYmxpbmcnDQoJbGluayA9IG9wZW5VUkwoJ2h0dHA6Ly9ub29ic2FuZG5lcmRzLmNvbS9USS9BZGRvblBvcnRhbC9hZHVsdC5waHAnKS5yZXBsYWNlKCdcbicsJycpLnJlcGxhY2UoJ1xyJywnJykucmVwbGFjZSgnXHQnLCcnKQ0KCWxpc3QgPSByZS5jb21waWxlKCdpPSIoLis/KSInKS5maW5kYWxsKGxpbmspDQoJZm91bmQgPSBbXQ0KCWZvciBpdGVtIGluIGxpc3Q6DQoJCWZvbGQgPSBvcy5wYXRoLmpvaW4oQURET05TLCBpdGVtKQ0KCQlpZiBvcy5wYXRoLmV4aXN0cyhmb2xkKToNCgkJCWZvdW5kLmFwcGVuZChpdGVtKQ0KCQkJdG9nZ2xlQWRkb24oaXRlbSwgc3RhdGUsIFRydWUpDQoJCQlsb2coIltUb2dnbGUgQWR1bHRdICVzICVzIiAlIChnb3RvLCBpdGVtKSwgeGJtYy5MT0dOT1RJQ0UpDQoJaWYgbGVuKGZvdW5kKSA+IDA6IA0KCQlpZiBESUFMT0cueWVzbm8oQURET05USVRMRSwgIltDT0xPUiAlc11Xb3VsZCB5b3UgbGlrZSB0byB2aWV3IGEgbGlzdCBvZiB0aGUgYWRkb25zIHRoYXQgd2hlcmUgJXM/Wy9DT0xPUl0iICUgKENPTE9SMiwgZ290by5yZXBsYWNlKCdpbmcnLCAnZWQnKSksIHllc2xhYmVsPSJbQl1bQ09MT1IgZ3JlZW5dVmlldyBMaXN0Wy9DT0xPUl1bL0JdIiwgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1DYW5jZWxbL0NPTE9SXVsvQl0iKToNCgkJCWVkaXRsaXN0ID0gJ1tDUl0nLmpvaW4oZm91bmQpDQoJCQlUZXh0Qm94KEFERE9OVElUTEUsICJbQ09MT1IgJXNdSGVyZSBhcmUgYSBsaXN0IG9mIHRoZSBhZGRvbnMgdGhhdCB3aGVyZSAlcyBmb3IgQWR1bHQgQ29udGVudDpbL0NPTE9SXVtDUl1bQ1JdW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgZ290by5yZXBsYWNlKCdpbmcnLCAnZWQnKSwgQ09MT1IyLCBlZGl0bGlzdCkpDQoJCWVsc2U6IExvZ05vdGlmeSgiW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMSwgQURET05USVRMRSksICJbQ09MT1IgJXNdW0NPTE9SICVzXSVkWy9DT0xPUl0gQWR1bHQgQWRkb25zICVzWy9DT0xPUl0iICUgKENPTE9SMiwgQ09MT1IxLCBjb3VudCwgZ290by5yZXBsYWNlKCdpbmcnLCAnZWQnKSkpDQoJCWZvcmNlVXBkYXRlKFRydWUpDQoJZWxzZTogTG9nTm90aWZ5KCJbQ09MT1IgJXNdJXNbL0NPTE9SXSIgJSAoQ09MT1IxLCBBRERPTlRJVExFKSwgIltDT0xPUiAlc11ObyBBZHVsdCBBZGRvbnMgRm91bmRbL0NPTE9SXSIgJSBDT0xPUjIpDQoNCmRlZiBjcmVhdGVUZW1wKHBsdWdpbik6DQoJdGVtcCAgID0gb3MucGF0aC5qb2luKFBMVUdJTiwgJ3Jlc291cmNlcycsICd0ZW1wYWRkb24ueG1sJykNCglmICAgICAgPSBvcGVuKHRlbXAsICdyJyk7IHIgPSBmLnJlYWQoKTsgZi5jbG9zZSgpDQoJcGx1Z2RpciA9IG9zLnBhdGguam9pbihBRERPTlMsIHBsdWdpbikNCglpZiBub3Qgb3MucGF0aC5leGlzdHMocGx1Z2Rpcik6IG9zLm1ha2VkaXJzKHBsdWdkaXIpDQoJYSA9IG9wZW4ob3MucGF0aC5qb2luKHBsdWdkaXIsICdhZGRvbi54bWwnKSwgJ3cnKQ0KCWEud3JpdGUoci5yZXBsYWNlKCd0ZXN0aWQnLCBwbHVnaW4pLnJlcGxhY2UoJ3Rlc3R2ZXJzaW9uJywgJzAuMC4xJykpDQoJYS5jbG9zZSgpDQoJbG9nKCIlczogd3JvdGUgYWRkb24ueG1sIiAlIHBsdWdpbikNCg0KZGVmIGZpeG1ldGFzKCk6DQoJaWRsaXN0ID0gWydwbHVnaW4udmlkZW8ubWV0YWxsaXEnLCAncGx1Z2luLnZpZGVvLm1ldGEnLCAnc2NyaXB0LnJlbmVnYWRlc21ldGEnXQ0KCXRlbXAgICA9IG9zLnBhdGguam9pbihQTFVHSU4sICdyZXNvdXJjZXMnLCAndGVtcGFkZG9uLnhtbCcpDQoJZiAgICAgID0gb3Blbih0ZW1wLCAncicpOyByID0gZi5yZWFkKCk7IGYuY2xvc2UoKQ0KCWZvciBpdGVtIGluIGlkbGlzdDoNCgkJZm9sZCA9IG9zLnBhdGguam9pbihBRERPTlMsIGl0ZW0pDQoJCWlmIG9zLnBhdGguZXhpc3RzKGZvbGQpOg0KCQkJaWYgbm90IG9zLnBhdGguZXhpc3RzKG9zLnBhdGguam9pbihmb2xkLCAnYWRkb24ueG1sJykpOiBjb250aW51ZQ0KCQkJYSA9IG9wZW4ob3MucGF0aC5qb2luKGZvbGQsICdhZGRvbi54bWwnKSwgJ3cnKQ0KCQkJYS53cml0ZShyLnJlcGxhY2UoJ3Rlc3RpZCcsIGl0ZW0pLnJlcGxhY2UoJ3Rlc3R2ZXJzaW9uJywgJzAuMC4xJykpDQoJCQlhLmNsb3NlKCkNCgkJCWxvZygiJXM6IHJlLXdyb3RlIGFkZG9uLnhtbCIgJSBpdGVtKQ0KDQpkZWYgdG9nZ2xlQWRkb24oaWQsIHZhbHVlLCBvdmVyPU5vbmUpOg0KCWlmIEtPRElWID49IDE3Og0KCQlhZGRvbkRhdGFiYXNlKGlkLCB2YWx1ZSkNCgkJcmV0dXJuDQoJYWRkb25pZCAgPSBpZA0KCWFkZG9ueG1sID0gb3MucGF0aC5qb2luKEFERE9OUywgaWQsICdhZGRvbi54bWwnKQ0KCWlmIG9zLnBhdGguZXhpc3RzKGFkZG9ueG1sKToNCgkJZiAgICAgICAgPSBvcGVuKGFkZG9ueG1sKQ0KCQliICAgICAgICA9IGYucmVhZCgpDQoJCXRpZCAgICAgID0gcGFyc2VET00oYiwgJ2FkZG9uJywgcmV0PSdpZCcpDQoJCXRuYW1lICAgID0gcGFyc2VET00oYiwgJ2FkZG9uJywgcmV0PSduYW1lJykNCgkJdHNlcnZpY2UgPSBwYXJzZURPTShiLCAnZXh0ZW5zaW9uJywgcmV0PSdsaWJyYXJ5JywgYXR0cnMgPSB7J3BvaW50JzogJ3hibWMuc2VydmljZSd9KQ0KCQl0cnk6DQoJCQlpZiBsZW4odGlkKSA+IDA6DQoJCQkJYWRkb25pZCA9IHRpZFswXQ0KCQkJaWYgbGVuKHRzZXJ2aWNlKSA+IDA6DQoJCQkJbG9nKCJXZSBnb3QgYSBsaXZlIG9uZSwgc3RvcHBpbmcgc2NyaXB0OiAlcyIgJSBtYXRjaFswXSwgeGJtYy5MT0dERUJVRykNCgkJCQllYmkoJ1N0b3BTY3JpcHQoJXMpJyAlIG9zLnBhdGguam9pbihBRERPTlMsIGFkZG9uaWQpKQ0KCQkJCWViaSgnU3RvcFNjcmlwdCglcyknICUgYWRkb25pZCkNCgkJCQllYmkoJ1N0b3BTY3JpcHQoJXMpJyAlIG9zLnBhdGguam9pbihBRERPTlMsIGFkZG9uaWQsIHRzZXJ2aWNlWzBdKSkNCgkJCQl4Ym1jLnNsZWVwKDUwMCkNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCXF1ZXJ5ID0gJ3sianNvbnJwYyI6IjIuMCIsICJtZXRob2QiOiJBZGRvbnMuU2V0QWRkb25FbmFibGVkIiwicGFyYW1zIjp7ImFkZG9uaWQiOiIlcyIsImVuYWJsZWQiOiVzfSwgImlkIjoxfScgJSAoYWRkb25pZCwgdmFsdWUpDQoJcmVzcG9uc2UgPSB4Ym1jLmV4ZWN1dGVKU09OUlBDKHF1ZXJ5KQ0KCWlmICdlcnJvcicgaW4gcmVzcG9uc2UgYW5kIG92ZXIgPT0gTm9uZToNCgkJdiA9ICdFbmFibGluZycgaWYgdmFsdWUgPT0gJ3RydWUnIGVsc2UgJ0Rpc2FibGluZycNCgkJRElBTE9HLm9rKEFERE9OVElUTEUsICJbQ09MT1IgJXNdRXJyb3IgJXMgW0NPTE9SICVzXSVzWy9DT0xPUl0iICUgKENPTE9SMiwgQ09MT1IxLCB2LCBpZCksICJDaGVjayB0byBtYWtlIHN1cmUgdGhlIGFkZG9uIGxpc3QgaXMgdXB0byBkYXRlIGFuZCB0cnkgYWdhaW4uWy9DT0xPUl0iKQ0KCQlmb3JjZVVwZGF0ZSgpDQoNCmRlZiBhZGRvbkluZm8oYWRkLCBpbmZvKToNCglhZGRvbiA9IGFkZG9uSWQoYWRkKQ0KCWlmIGFkZG9uOiByZXR1cm4gYWRkb24uZ2V0QWRkb25JbmZvKGluZm8pDQoJZWxzZTogcmV0dXJuIEZhbHNlDQoNCmRlZiB3aGlsZVdpbmRvdyh3aW5kb3csIGFjdGl2ZT1GYWxzZSwgY291bnQ9MCwgY291bnRlcj0xNSk6DQoJd2luZG93b3BlbiA9IGdldENvbmQoJ1dpbmRvdy5Jc0FjdGl2ZSglcyknICUgd2luZG93KQ0KCWxvZygiJXMgaXMgJXMiICUgKHdpbmRvdywgd2luZG93b3BlbiksIHhibWMuTE9HREVCVUcpDQoJd2hpbGUgbm90IHdpbmRvd29wZW4gYW5kIGNvdW50IDwgY291bnRlcjoNCgkJbG9nKCIlcyBpcyAlcyglcykiICUgKHdpbmRvdywgd2luZG93b3BlbiwgY291bnQpKQ0KCQl3aW5kb3dvcGVuID0gZ2V0Q29uZCgnV2luZG93LklzQWN0aXZlKCVzKScgJSB3aW5kb3cpDQoJCWNvdW50ICs9IDEgDQoJCXhibWMuc2xlZXAoNTAwKQ0KCQkNCgl3aGlsZSB3aW5kb3dvcGVuOg0KCQlhY3RpdmUgPSBUcnVlDQoJCWxvZygiJXMgaXMgJXMiICUgKHdpbmRvdywgd2luZG93b3BlbiksIHhibWMuTE'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))